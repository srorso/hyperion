ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             2 ***********************************************************************
                                                                             3 *
                                                                             4 *Testcase IEEE CONVERT FROM FIXED 32
                                                                             5 *  Test case capability includes IEEE exceptions trappable and
                                                                             6 *  otherwise.  Test result, FPC flags, and DXC saved for all tests.
                                                                             7 *  Convert From Fixed does not set the condition code.
                                                                             8 *
                                                                             9 ***********************************************************************


                                                                            11 ***********************************************************************
                                                                            12 *
                                                                            13 * Tests the following six conversion instructions
                                                                            14 *   CONVERT FROM FIXED (32 to short BFP, RRE)
                                                                            15 *   CONVERT FROM FIXED (32 to long BFP, RRE)
                                                                            16 *   CONVERT FROM FIXED (32 to extended BFP, RRE)
                                                                            17 *   CONVERT FROM FIXED (32 to short BFP, RRF-e)
                                                                            18 *   CONVERT FROM FIXED (32 to long BFP, RRF-e)
                                                                            19 *   CONVERT FROM FIXED (32 to extended BFP, RRF-e)
                                                                            20 *
                                                                            21 * Test data is compiled into this program.  The test script that runs
                                                                            22 * this program can provide alternative test data through Hercules R
                                                                            23 * commands.
                                                                            24 *
                                                                            25 * Test Case Order
                                                                            26 * 1) Int-32 to Short BFP
                                                                            27 * 2) Int-32 to Short BFP with all rounding modes
                                                                            28 * 3) Int-32 to Long BFP
                                                                            29 * 4) Int-32 to Extended BFP
                                                                            30 *
                                                                            31 * Provided test data is 1, 2, 4, -2, 2 147 483 647, -2 147 483 647.
                                                                            32 *   The last two values will trigger inexact exceptions when converted
                                                                            33 *   to short BFP.  The last two values are also used to test rounding
                                                                            34 *   mode and inexact supression in the CEFBRA instruction.
                                                                            35 *
                                                                            36 * Also tests the following floating point support instructions
                                                                            37 *   LOAD  (Short)
                                                                            38 *   LOAD  (Long)
                                                                            39 *   LOAD FPC
                                                                            40 *   SET BFP ROUNDING MODE 2-BIT
                                                                            41 *   SET BFP ROUNDING MODE 3-BIT
                                                                            42 *   STORE (Short)
                                                                            43 *   STORE (Long)
                                                                            44 *   STORE FPC
                                                                            45 *
                                                                            46 ***********************************************************************



                                      0000000000000000  0000000000000477    48 BFPCVTFF START 0
                                      0000000000000000  0000000000000001    49 R0       EQU   0
                                      0000000000000001  0000000000000001    50 R1       EQU   1
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000002  0000000000000001    51 R2       EQU   2
                                      0000000000000003  0000000000000001    52 R3       EQU   3
                                      0000000000000004  0000000000000001    53 R4       EQU   4
                                      0000000000000005  0000000000000001    54 R5       EQU   5
                                      0000000000000006  0000000000000001    55 R6       EQU   6
                                      0000000000000007  0000000000000001    56 R7       EQU   7
                                      0000000000000008  0000000000000001    57 R8       EQU   8
                                      0000000000000009  0000000000000001    58 R9       EQU   9
                                      000000000000000A  0000000000000001    59 R10      EQU   10
                                      000000000000000B  0000000000000001    60 R11      EQU   11
                                      000000000000000C  0000000000000001    61 R12      EQU   12
                                      000000000000000D  0000000000000001    62 R13      EQU   13
                                      000000000000000E  0000000000000001    63 R14      EQU   14
                                      000000000000000F  0000000000000001    64 R15      EQU   15
0000000000000000                      0000000000000000                      65          USING *,0
0000000000000000                      0000000000000000  000000000000008E    66          ORG   BFPCVTFF+X'8E'      Program check interrution code
000000000000008E  0000                                                      67 PCINTCD  DS    H
                                      0000000000000150  0000000000000000    68 PCOLDPSW EQU   BFPCVTFF+X'150'     Program check old PSW
0000000000000090                      0000000000000090  00000000000001A0    69          ORG   BFPCVTFF+X'1A0'
00000000000001A0  00000001 80000000                                         70          DC    X'0000000180000000',AD(START)     z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    71          ORG   BFPCVTFF+X'1D0'
00000000000001D0  00000000 00000000                                         72          DC    X'0000000000000000',AD(PROGCHK)   z/Arch pgm chk
00000000000001E0                      00000000000001E0  0000000000000200    73          ORG   BFPCVTFF+X'200'
                                                                            74 *
                                                                            75 * Program check routine.  If Data Exception, continue execution at
                                                                            76 * the instruction following the program check.  Otherwise, hard wait.
                                                                            77 *
0000000000000200                                                            78 PROGCHK  DS    0H             Program check occured...
0000000000000200  9507 008F                             000000000000008F    79          CLI   PCINTCD+1,X'07'  Data Exception?
0000000000000204  4770 020C                             000000000000020C    80          BNE   PCNOTDTA       ..no, hardwait
0000000000000208  B2B2 0150                             0000000000000150    81          LPSWE PCOLDPSW       ..yes, resume program execution
000000000000020C  B2B2 0250                             0000000000000250    82 PCNOTDTA LPSWE HARDWAIT       Not data exception, enter disabled wait.
                                                                            83 *
                                                                            84 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                                            85 *
0000000000000210  B600 0260                             0000000000000260    86 START    STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000214  9604 0261                             0000000000000261    87          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000218  B700 0260                             0000000000000260    88          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                                            89 *
000000000000021C  41A0 0280                             0000000000000280    90          LA    R10,SHORTS     Point to integer test inputs
0000000000000220  4DD0 02C0                             00000000000002C0    91          BAS   R13,CEFBR      Convert values from fixed to short BFP
                                                                            92 *2345678901234567890123456789012345678901234567890123456789012345678901
                                                                            93
0000000000000224  41A0 02B0                             00000000000002B0    94          LA    R10,RMSHORTS   Point to inputs for rounding mode tests
0000000000000228  4DD0 0302                             0000000000000302    95          BAS   R13,CEFBRA     Convert using all rounding mode options
                                                                            96 *
000000000000022C  41A0 0290                             0000000000000290    97          LA    R10,LONGS      Point to integer test inputs
0000000000000230  4DD0 03D4                             00000000000003D4    98          BAS   R13,CDFBR      Convert values from fixed to long BFP
                                                                            99 *
0000000000000234  41A0 02A0                             00000000000002A0   100          LA    R10,EXTDS      Point to integer test inputs
0000000000000238  4DD0 0416                             0000000000000416   101          BAS   R13,CXFBR      Convert values from fixed to extended
                                                                           102 *
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000023C  B2B2 0240                             0000000000000240   103          LPSWE WAITPSW        All done
                                                                           104 *
0000000000000240                                                           105          DS    0D             Ensure correct alignment for psw
0000000000000240  00020000 00000000                                        106 WAITPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
0000000000000250  00020000 00000000                                        107 HARDWAIT DC    X'0002000000000000',XL6'00',X'DEAD' Abnormal end
                                                                           108 *
0000000000000260  00000000                                                 109 CTLR0    DS    F
0000000000000264  00000000                                                 110 FPCREGNT DC    X'00000000'    FPC Reg IEEE exceptions Not Trappable
0000000000000268  F8000000                                                 111 FPCREGTR DC    X'F8000000'    FPC Reg IEEE exceptions TRappable
                                                                           112 *
                                                                           113 * Input values parameter list, four fullwords:
                                                                           114 *      1) Count,
                                                                           115 *      2) Address of inputs,
                                                                           116 *      3) Address to place results, and
                                                                           117 *      4) Address to place DXC/Flags/cc values.
                                                                           118 *
000000000000026C                      000000000000026C  0000000000000280   119          ORG   BFPCVTFF+X'280'
0000000000000280                                                           120 SHORTS   DS    0F
0000000000000280  00000006                                                 121          DC    A(INTCOUNT/4)
0000000000000284  00000460                                                 122          DC    A(INTIN)
0000000000000288  00001000                                                 123          DC    A(SBFPOUT)
000000000000028C  00001080                                                 124          DC    A(SBFPFLGS)
                                                                           125 *
0000000000000290                                                           126 LONGS    DS    0F           int-32 inputs for long BFP testing
0000000000000290  00000006                                                 127          DC    A(INTCOUNT/4)
0000000000000294  00000460                                                 128          DC    A(INTIN)
0000000000000298  00001200                                                 129          DC    A(LBFPOUT)
000000000000029C  00001300                                                 130          DC    A(LBFPFLGS)
                                                                           131 *
00000000000002A0                                                           132 EXTDS    DS    0F           int-32 inputs for Extended BFP testing
00000000000002A0  00000006                                                 133          DC    A(INTCOUNT/4)
00000000000002A4  00000460                                                 134          DC    A(INTIN)
00000000000002A8  00001400                                                 135          DC    A(XBFPOUT)
00000000000002AC  00001600                                                 136          DC    A(XBFPFLGS)
                                                                           137 *
00000000000002B0  00000002                                                 138 RMSHORTS DC    A(INTRMCT/4)
00000000000002B4  00000470                                                 139          DC    A(INTINRM)   Last two int-32 are only concerns
00000000000002B8  00001100                                                 140          DC    A(SBFPRMO)   Space for rounding mode tests
00000000000002BC  00001180                                                 141          DC    A(SBFPRMOF)  Space for rounding mode test flags
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           143 ***********************************************************************
                                                                           144 *
                                                                           145 * Convert int-32 to short BFP format.  A pair of results is generated
                                                                           146 * for each input: one with all exceptions non-trappable, and the second
                                                                           147 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           148 *
                                                                           149 ***********************************************************************



00000000000002C0  9823 A000                             0000000000000000   151 CEFBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000002C4  9878 A008                             0000000000000008   152          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000002C8  1222                                                     153          LTR   R2,R2         Any test cases?
00000000000002CA  078D                                                     154          BZR   R13           ..No, return to caller
00000000000002CC  0DC0                                                     155          BASR  R12,0         Set top of loop
                                                                           156 *
00000000000002CE  5810 3000                             0000000000000000   157          L     R1,0(0,R3)    Get integer test value
00000000000002D2  B29D 0264                             0000000000000264   158          LFPC  FPCREGNT      Set exceptions non-trappable
00000000000002D6  B394 0001                                                159          CEFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002DA  7000 7000                             0000000000000000   160          STE   R0,0(0,R7)    Store short BFP result
00000000000002DE  B29C 8000                             0000000000000000   161          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           162 *
00000000000002E2  B29D 0268                             0000000000000268   163          LFPC  FPCREGTR      Set exceptions trappable
00000000000002E6  B394 0001                                                164          CEFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002EA  7000 7004                             0000000000000004   165          STE   R0,4(0,R7)    Store short BFP result
00000000000002EE  B29C 8004                             0000000000000004   166          STFPC 4(R8)         Store resulting FPC flags and DXC
00000000000002F2  4130 3004                             0000000000000004   167          LA    R3,4(0,R3)    point to next input values
00000000000002F6  4170 7008                             0000000000000008   168          LA    R7,8(0,R7)    Point to next short BFP converted values
00000000000002FA  4180 8008                             0000000000000008   169          LA    R8,8(0,R8)    Point to next FPCR/CC result area
00000000000002FE  062C                                                     170          BCTR  R2,R12        Convert next input value.
0000000000000300  07FD                                                     171          BR    R13           All converted; return.
                                                                           172 *
                                                                           173 * Convert int-32 to short BFP format using each possible rounding mode.
                                                                           174 * Ten test results are generated for each input.  A 48-byte test result
                                                                           175 * section is used to keep results sets aligned on a quad-double word.
                                                                           176 *
                                                                           177 * The first four tests use rounding modes specified in the FPC with the
                                                                           178 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the first
                                                                           179 * two FPCR-controlled tests and SRNMB (3-bit) is used for the last two
                                                                           180 * to get full coverage of that instruction pair.
                                                                           181 *
                                                                           182 * The next six results use instruction-specified rounding modes.
                                                                           183 *
                                                                           184 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           185 * prior tests used the default rounding mode.  RNTE is tested explicitly
                                                                           186 * as a rounding mode in this section.
                                                                           187 *
0000000000000302  9823 A000                             0000000000000000   188 CEFBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000306  9878 A008                             0000000000000008   189          LM    R7,R8,8(R10)  Get address of result area and flag area.
000000000000030A  1222                                                     190          LTR   R2,R2         Any test cases?
000000000000030C  078D                                                     191          BZR   R13           ..No, return to caller
000000000000030E  0DC0                                                     192          BASR  R12,0         Set top of loop
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           193 *
0000000000000310  5810 3000                             0000000000000000   194          L     R1,0(0,R3)    Get integer test value
                                                                           195 *
                                                                           196 * Test cases using rounding mode specified in the FPCR
                                                                           197 *
0000000000000314  B29D 0264                             0000000000000264   198          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000318  B299 0001                             0000000000000001   199          SRNM  1             SET FPCR to RZ, towards zero
000000000000031C  B394 0401                                                200          CEFBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000320  7000 7000                             0000000000000000   201          STE   R0,0*4(0,R7)  Store short BFP result
0000000000000324  B29C 8000                             0000000000000000   202          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           203 *
0000000000000328  B29D 0264                             0000000000000264   204          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000032C  B299 0002                             0000000000000002   205          SRNM  2             SET FPCR to RP, to +infinity
0000000000000330  B394 0401                                                206          CEFBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000334  7000 7004                             0000000000000004   207          STE   R0,1*4(0,R7)  Store short BFP result
0000000000000338  B29C 8004                             0000000000000004   208          STFPC 1*4(R8)       Store resulting FPC flags and DXC
                                                                           209 *
000000000000033C  B29D 0264                             0000000000000264   210          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000340  B2B8 0003                             0000000000000003   211          SRNMB 3             SET FPCR to RM, to -infinity
0000000000000344  B394 0401                                                212          CEFBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000348  7000 7008                             0000000000000008   213          STE   R0,2*4(0,R7)  Store short BFP result
000000000000034C  B29C 8008                             0000000000000008   214          STFPC 2*4(R8)       Store resulting FPC flags and DXC
                                                                           215 *
0000000000000350  B29D 0264                             0000000000000264   216          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000354  B2B8 0007                             0000000000000007   217          SRNMB 7             RFS, Prepare For Shorter Precision
0000000000000358  B394 0401                                                218          CEFBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
000000000000035C  7000 700C                             000000000000000C   219          STE   R0,3*4(0,R7)  Store short BFP result
0000000000000360  B29C 800C                             000000000000000C   220          STFPC 3*4(R8)       Store resulting FPC flags and DXC
                                                                           221 *
0000000000000364  B29D 0264                             0000000000000264   222          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000368  B394 1001                                                223          CEFBRA R0,1,R1,B'0000'  RNTA, to nearest, ties away from zero
000000000000036C  7000 7010                             0000000000000010   224          STE   R0,4*4(0,R7)  Store short BFP result
0000000000000370  B29C 8010                             0000000000000010   225          STFPC 4*4(R8)       Store resulting FPC flags and DXC
                                                                           226 *
0000000000000374  B29D 0264                             0000000000000264   227          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000378  B394 3001                                                228          CEFBRA R0,3,R1,B'0000'  RPS, to prepare for shorter precision
000000000000037C  7000 7014                             0000000000000014   229          STE   R0,5*4(0,R7)  Store short BFP result
0000000000000380  B29C 8014                             0000000000000014   230          STFPC 5*4(R8)       Store resulting FPC flags and DXC
                                                                           231 *
0000000000000384  B29D 0264                             0000000000000264   232          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000388  B394 4001                                                233          CEFBRA R0,4,R1,B'0000'  RNTE to nearest, ties to even
000000000000038C  7000 7018                             0000000000000018   234          STE   R0,6*4(0,R7)  Store short BFP result
0000000000000390  B29C 8018                             0000000000000018   235          STFPC 6*4(R8)       Store resulting FPC flags and DXC
                                                                           236 *
0000000000000394  B29D 0264                             0000000000000264   237          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000398  B394 5001                                                238          CEFBRA R0,5,R1,B'0000'  RZ, toward zero
000000000000039C  7000 701C                             000000000000001C   239          STE   R0,7*4(0,R7)  Store short BFP result
00000000000003A0  B29C 801C                             000000000000001C   240          STFPC 7*4(R8)       Store resulting FPC flags and DXC
                                                                           241 *
00000000000003A4  B29D 0264                             0000000000000264   242          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003A8  B394 6001                                                243          CEFBRA R0,6,R1,B'0000'  RP, to +inf
00000000000003AC  7000 7020                             0000000000000020   244          STE   R0,8*4(0,R7)  Store short BFP result
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000003B0  B29C 8020                             0000000000000020   245          STFPC 8*4(R8)       Store resulting FPC flags and DXC
                                                                           246 *
00000000000003B4  B29D 0264                             0000000000000264   247          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003B8  B394 7001                                                248          CEFBRA R0,7,R1,B'0000'  RM, to -inf
00000000000003BC  7000 7024                             0000000000000024   249          STE   R0,9*4(0,R7)  Store short BFP result
00000000000003C0  B29C 8024                             0000000000000024   250          STFPC 9*4(R8)       Store resulting FPC flags and DXC
                                                                           251 *
00000000000003C4  4130 3004                             0000000000000004   252          LA    R3,4(0,R3)    point to next input values
00000000000003C8  4170 7030                             0000000000000030   253          LA    R7,12*4(0,R7)  Point to next short BFP converted values
00000000000003CC  4180 8030                             0000000000000030   254          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
00000000000003D0  062C                                                     255          BCTR  R2,R12        Convert next input value.
00000000000003D2  07FD                                                     256          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           258 ***********************************************************************
                                                                           259 *
                                                                           260 * Convert int-32 to long BFP format.  A pair of results is generated
                                                                           261 * for each input: one with all exceptions non-trappable, and the second
                                                                           262 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           263 * Conversion of a 32-bit integer to long is always exact; no exceptions
                                                                           264 * are expected
                                                                           265 *
                                                                           266 ***********************************************************************



00000000000003D4  9823 A000                             0000000000000000   268 CDFBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000003D8  9878 A008                             0000000000000008   269          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000003DC  1222                                                     270          LTR   R2,R2         Any test cases?
00000000000003DE  078D                                                     271          BZR   R13           ..No, return to caller
00000000000003E0  0DC0                                                     272          BASR  R12,0         Set top of loop
                                                                           273 *
00000000000003E2  5810 3000                             0000000000000000   274          L     R1,0(0,R3)    Get integer test value
00000000000003E6  B29D 0264                             0000000000000264   275          LFPC  FPCREGNT      Set exceptions non-trappable
00000000000003EA  B395 0001                                                276          CDFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000003EE  6000 7000                             0000000000000000   277          STD   R0,0(0,R7)    Store long BFP result
00000000000003F2  B29C 8000                             0000000000000000   278          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           279 *
00000000000003F6  B29D 0268                             0000000000000268   280          LFPC  FPCREGTR      Set exceptions trappable
00000000000003FA  B395 0001                                                281          CDFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000003FE  6000 7008                             0000000000000008   282          STD   R0,8(0,R7)    Store long BFP result
0000000000000402  B29C 8004                             0000000000000004   283          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000406  4130 3004                             0000000000000004   284          LA    R3,4(0,R3)    point to next input values
000000000000040A  4170 7010                             0000000000000010   285          LA    R7,16(0,R7)   Point to next long BFP converted value
000000000000040E  4180 8008                             0000000000000008   286          LA    R8,8(0,R8)    Point to next FPCR/CC result area
0000000000000412  062C                                                     287          BCTR  R2,R12        Convert next input value.
0000000000000414  07FD                                                     288          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     8

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           290 ***********************************************************************
                                                                           291 *
                                                                           292 * Convert int-32 to extended BFP format.  A pair of results is
                                                                           293 * generated for each input: one with all exceptions non-trappable,
                                                                           294 * and the second with all exceptions trappable.   The FPCR is
                                                                           295 * stored for each result.  Conversion of a 32-bit integer to
                                                                           296 * extended is always exact; no exceptions are expected
                                                                           297 *
                                                                           298 ***********************************************************************



0000000000000416  9823 A000                             0000000000000000   300 CXFBR    LM    R2,R3,0(R10)  Get count and address of test input values
000000000000041A  9878 A008                             0000000000000008   301          LM    R7,R8,8(R10)  Get address of result area and flag area.
000000000000041E  1222                                                     302          LTR   R2,R2         Any test cases?
0000000000000420  078D                                                     303          BZR   R13           ..No, return to caller
0000000000000422  0DC0                                                     304          BASR  R12,0         Set top of loop
                                                                           305 *
0000000000000424  5810 3000                             0000000000000000   306          L     R1,0(0,R3)    Get integer test value
0000000000000428  B29D 0264                             0000000000000264   307          LFPC  FPCREGNT      Set exceptions non-trappable
000000000000042C  B396 0001                                                308          CXFBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
0000000000000430  6000 7000                             0000000000000000   309          STD   R0,0(0,R7)    Store extended BFP result part 1
0000000000000434  6020 7008                             0000000000000008   310          STD   R2,8(0,R7)    Store extended BFP result part 1
0000000000000438  B29C 8000                             0000000000000000   311          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           312 *
000000000000043C  B29D 0268                             0000000000000268   313          LFPC  FPCREGTR      Set exceptions trappable
0000000000000440  B396 0001                                                314          CXFBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
0000000000000444  6000 7010                             0000000000000010   315          STD   R0,16(0,R7)   Store extended BFP result
0000000000000448  6020 7018                             0000000000000018   316          STD   R2,24(0,R7)   Store extended BFP result
000000000000044C  B29C 8004                             0000000000000004   317          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000450  4130 3004                             0000000000000004   318          LA    R3,4(0,R3)    point to next input values
0000000000000454  4170 7020                             0000000000000020   319          LA    R7,32(0,R7)   Point to next extended BFP converted value
0000000000000458  4180 8008                             0000000000000008   320          LA    R8,8(0,R8)    Point to next FPCR/CC result area
000000000000045C  062C                                                     321          BCTR  R2,R12        Convert next input value.
000000000000045E  07FD                                                     322          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page     9

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           324 ***********************************************************************
                                                                           325 *
                                                                           326 * Short integer inputs for Convert From Fixed testing.  The same set of
                                                                           327 * inputs are used for short, long, and extended formats.  The last two
                                                                           328 * values are used for rounding mode tests for short only; conversion of
                                                                           329 * int-32 to long or extended are always exact.
                                                                           330 *
                                                                           331 ***********************************************************************



0000000000000460                                                           333 INTIN    DS    0F
0000000000000460  00000001                                                 334          DC    F'1'
0000000000000464  00000002                                                 335          DC    F'2'
0000000000000468  00000004                                                 336          DC    F'4'
000000000000046C  FFFFFFFE                                                 337          DC    F'-2'
0000000000000470  7FFFFFFF                                                 338 INTINRM  DC    F'2147483647'  should compile to X'7FFFFFFF'
0000000000000474  80000001                                                 339          DC    F'-2147483647' should compile to X'80000001'
0000000000000478                                                           340          DS    0F             req' by asma for following EQU to work.
                                      0000000000000018  0000000000000001   341 INTCOUNT EQU   *-INTIN        Count of integers in list * 4
                                      0000000000000008  0000000000000001   342 INTRMCT  EQU   *-INTINRM      Count of rounding mode test inputs * 4
                                                                           343 *
                                      0000000000001000  0000000000000000   344 SBFPOUT  EQU   BFPCVTFF+X'1000'    Int-32 results from short BFP inputs
                                                                           345 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001080  0000000000000000   346 SBFPFLGS EQU   BFPCVTFF+X'1080'    FPCR flags and DXC from short BFP
                                                                           347 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001100  0000000000000000   348 SBFPRMO  EQU   BFPCVTFF+X'1100'    Short BFP rounding mode results
                                                                           349 *                                  ..2 sets used, no room for more sets
                                      0000000000001180  0000000000000000   350 SBFPRMOF EQU   BFPCVTFF+X'1180'    Short BFP rndg mode FPCR contents
                                                                           351 *                                  ..2 sets used, no room for more sets
                                                                           352 *
                                      0000000000001200  0000000000000000   353 LBFPOUT  EQU   BFPCVTFF+X'1200'    Int-32 results from long BFP inputs
                                                                           354 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001300  0000000000000000   355 LBFPFLGS EQU   BFPCVTFF+X'1300'    long BFP FPCR contents
                                                                           356 *                                  ..6 pairs used, room for 32 pairs
                                                                           357 *
                                      0000000000001400  0000000000000000   358 XBFPOUT  EQU   BFPCVTFF+X'1400'    Int-32 results from extended BFP
                                                                           359 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001600  0000000000000000   360 XBFPFLGS EQU   BFPCVTFF+X'1600'    Extended BFP FPCR contents
                                                                           361 *                                  ..6 pairs used, room for 16 pairs
                                                                           362 *
                                                                           363 *
0000000000000478                                                           364          END
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page    10

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPCVTFF            J    000000    1144    48   66   68   69   71   73  119  344  346  348  350  353  355  358  360
CDFBR               I    0003D4       4   268   98
CEFBR               I    0002C0       4   151   91
CEFBRA              I    000302       4   188   95
CTLR0               F    000260       4   109   86   87   88
CXFBR               I    000416       4   300  101
EXTDS               F    0002A0       4   132  100
FPCREGNT            X    000264       4   110  158  198  204  210  216  222  227  232  237  242  247  275  307
FPCREGTR            X    000268       4   111  163  280  313
HARDWAIT            X    000250       8   107   82
IMAGE               1    000000    1144     0
INTCOUNT            U    000018       1   341  121  127  133
INTIN               F    000460       4   333  341  122  128  134
INTINRM             F    000470       4   338  342  139
INTRMCT             U    000008       1   342  138
LBFPFLGS            U    001300       0   355  130
LBFPOUT             U    001200       0   353  129
LONGS               F    000290       4   126   97
PCINTCD             H    00008E       2    67   79
PCNOTDTA            I    00020C       4    82   80
PCOLDPSW            U    000150       0    68   81
PROGCHK             H    000200       2    78   72
R0                  U    000000       1    49   86   88  159  160  164  165  200  201  206  207  212  213  218  219  223  224  228
                                               229  233  234  238  239  243  244  248  249  276  277  281  282  308  309  314  315
R1                  U    000001       1    50  157  159  164  194  200  206  212  218  223  228  233  238  243  248  274  276  281
                                               306  308  314
R10                 U    00000A       1    59   90   94   97  100  151  152  188  189  268  269  300  301
R11                 U    00000B       1    60
R12                 U    00000C       1    61  155  170  192  255  272  287  304  321
R13                 U    00000D       1    62   91   95   98  101  154  171  191  256  271  288  303  322
R14                 U    00000E       1    63
R15                 U    00000F       1    64
R2                  U    000002       1    51  151  153  170  188  190  255  268  270  287  300  302  310  316  321
R3                  U    000003       1    52  151  157  167  188  194  252  268  274  284  300  306  318
R4                  U    000004       1    53
R5                  U    000005       1    54
R6                  U    000006       1    55
R7                  U    000007       1    56  152  160  165  168  189  201  207  213  219  224  229  234  239  244  249  253  269
                                               277  282  285  301  309  310  315  316  319
R8                  U    000008       1    57  152  161  166  169  189  202  208  214  220  225  230  235  240  245  250  254  269
                                               278  283  286  301  311  317  320
R9                  U    000009       1    58
RMSHORTS            A    0002B0       4   138   94
SBFPFLGS            U    001080       0   346  124
SBFPOUT             U    001000       0   344  123
SBFPRMO             U    001100       0   348  140
SBFPRMOF            U    001180       0   350  141
SHORTS              F    000280       4   120   90
START               I    000210       4    86   70
WAITPSW             X    000240       8   106  103
XBFPFLGS            U    001600       0   360  136
XBFPOUT             U    001400       0   358  135
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page    11

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page    12

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     1144  000-477  000-477
  Region             1144  000-477  000-477
    CSECT  BFPCVTFF  1144  000-477  000-477
ASMA Ver. 0.2.0  ieee-cvtfrfix.asm: Test IEEE Convert From Fixed (int-32)                           09 Jul 2016 12:54:51  Page    13

   STMT                              FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-cvtfrfix.asm


** NO ERRORS FOUND **

