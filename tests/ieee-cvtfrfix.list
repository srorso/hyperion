ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             1 *
                                                                             2 *Testcase IEEE CONVERT FROM FIXED 32
                                                                             3 *  Test case capability includes ieee exceptions trappable and otherwise.
                                                                             4 *  Test result, FPC flags, and DXC saved for all tests.  (Convert From
                                                                             5 *  Fixed does not set the condition code.)
                                                                             6 *
                                                                             7 * Tests the following three conversion instructions
                                                                             8 *   CONVERT FROM FIXED (32 to short BFP, RRE)
                                                                             9 *   CONVERT FROM FIXED (32 to long BFP, RRE)
                                                                            10 *   CONVERT FROM FIXED (32 to extended BFP, RRE)
                                                                            11 *
                                                                            12 * Limited test data is compiled into this program.  The test script that runs
                                                                            13 * this program can provide alternative test data through Hercules R commands.
                                                                            14 *
                                                                            15 * Test Case Order
                                                                            16 * 1) Int-32 to Short BFP
                                                                            17 * 2) Int-32 to Short BFP with all rounding modes
                                                                            18 * 3) Int-32 to Long BFP
                                                                            19 * 4) Int-32 to Extended BFP
                                                                            20 *
                                                                            21 * Provided test data is 1, 2, 4, -2, 2 147 483 647, -2 147 483 647.
                                                                            22 *   The last two values will trigger inexact exceptions when converted
                                                                            23 *   to short BFP.  The last two values are also used to test rounding
                                                                            24 *   mode and inexact supression in the CEFBRA instruction.
                                                                            25 *
                                                                            26 * Also tests the following floating point support instructions
                                                                            27 *   LOAD  (Short)
                                                                            28 *   LOAD  (Long)
                                                                            29 *   STORE (Short)
                                                                            30 *   STORE (Long)
                                                                            31 *
                                      0000000000000000  0000000000000477    32 BFPCVTFF START 0
                                      0000000000000000  0000000000000001    33 R0       EQU   0
                                      0000000000000001  0000000000000001    34 R1       EQU   1
                                      0000000000000002  0000000000000001    35 R2       EQU   2
                                      0000000000000003  0000000000000001    36 R3       EQU   3
                                      0000000000000004  0000000000000001    37 R4       EQU   4
                                      0000000000000005  0000000000000001    38 R5       EQU   5
                                      0000000000000006  0000000000000001    39 R6       EQU   6
                                      0000000000000007  0000000000000001    40 R7       EQU   7
                                      0000000000000008  0000000000000001    41 R8       EQU   8
                                      0000000000000009  0000000000000001    42 R9       EQU   9
                                      000000000000000A  0000000000000001    43 R10      EQU   10
                                      000000000000000B  0000000000000001    44 R11      EQU   11
                                      000000000000000C  0000000000000001    45 R12      EQU   12
                                      000000000000000D  0000000000000001    46 R13      EQU   13
                                      000000000000000E  0000000000000001    47 R14      EQU   14
                                      000000000000000F  0000000000000001    48 R15      EQU   15
0000000000000000                      0000000000000000                      49          USING *,0
0000000000000000                      0000000000000000  000000000000008E    50          ORG   BFPCVTFF+X'8E'      Program check interrution code
000000000000008E  0000                                                      51 PCINTCD  DS    H
                                      0000000000000150  0000000000000000    52 PCOLDPSW EQU   BFPCVTFF+X'150'     Program check old PSW
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000090                      0000000000000090  00000000000001A0    53          ORG   BFPCVTFF+X'1A0'
00000000000001A0  00000001 80000000                                         54          DC    X'0000000180000000',AD(START)       z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    55          ORG   BFPCVTFF+X'1D0'
00000000000001D0  00000000 00000000                                         56 HARDWAIT DC    X'0000000000000000',AD(PROGCHK)   z/Arch pgm chk
00000000000001E0                      00000000000001E0  0000000000000200    57          ORG   BFPCVTFF+X'200'
                                                                            58 *
                                                                            59 * Program check routine.  If Data Exception, continue execution at
                                                                            60 * the instruction following the program check.  Otherwise, hard wait.
                                                                            61 *
0000000000000200                                                            62 PROGCHK  DS    0H             Program check occured...
0000000000000200  9507 008F                             000000000000008F    63          CLI   PCINTCD+1,X'07'  Data Exception?
0000000000000204  4770 020C                             000000000000020C    64          BNE   PCNOTDTA       ..no, hardwait
0000000000000208  B2B2 0150                             0000000000000150    65          LPSWE PCOLDPSW       ..yes, resume program execution
000000000000020C  B2B2 01D0                             00000000000001D0    66 PCNOTDTA LPSWE HARDWAIT       Not data exception, enter disabled wait.
                                                                            67 *
                                                                            68 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                                            69 *
0000000000000210  B600 0250                             0000000000000250    70 START    STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000214  9604 0251                             0000000000000251    71          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000218  B700 0250                             0000000000000250    72          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                                            73 *
000000000000021C  41A0 0280                             0000000000000280    74          LA    R10,SHORTS     Point to integer test inputs
0000000000000220  4DD0 02C0                             00000000000002C0    75          BAS   R13,CEFBR      Convert values from fixed to short BFP
0000000000000224  41A0 02B0                             00000000000002B0    76          LA    R10,RMSHORTS   Point to integer inputs for rounding mode tests
0000000000000228  4DD0 0302                             0000000000000302    77          BAS   R13,CEFBRA     Convert values from fixed to short using rm options
                                                                            78 *
000000000000022C  41A0 0290                             0000000000000290    79          LA    R10,LONGS      Point to integer test inputs
0000000000000230  4DD0 03D4                             00000000000003D4    80          BAS   R13,CDFBR      Convert values from fixed to long
                                                                            81 *
0000000000000234  41A0 02A0                             00000000000002A0    82          LA    R10,EXTDS      Point to integer test inputs
0000000000000238  4DD0 0416                             0000000000000416    83          BAS   R13,CXFBR      Convert values from fixed to extended
                                                                            84 *
000000000000023C  B2B2 0240                             0000000000000240    85          LPSWE WAITPSW        All done
                                                                            86 *
0000000000000240                                                            87          DS    0D             Ensure correct alignment for psw
0000000000000240  00020000 00000000                                         88 WAITPSW  DC    X'00020000000000000000000000000000'    Disabled wait state PSW - normal completion
0000000000000250  00000000                                                  89 CTLR0    DS    F
0000000000000254  00000000                                                  90 FPCREGNT DC    X'00000000'    FPC Reg IEEE exceptions Not Trappable
0000000000000258  F8000000                                                  91 FPCREGTR DC    X'F8000000'    FPC Reg IEEE exceptions TRappable
                                                                            92 *
                                                                            93 * Input values parameter list, four fullwords:
                                                                            94 *      1) Count,
                                                                            95 *      2) Address of inputs,
                                                                            96 *      3) Address to place results, and
                                                                            97 *      4) Address to place DXC/Flags/cc values.
                                                                            98 *
000000000000025C                      000000000000025C  0000000000000280    99          ORG   BFPCVTFF+X'280'
0000000000000280                                                           100 SHORTS   DS    0F
0000000000000280  00000006                                                 101          DC    A(INTCOUNT/4)
0000000000000284  00000460                                                 102          DC    A(INTIN)
0000000000000288  00001000                                                 103          DC    A(SBFPOUT)
000000000000028C  00001080                                                 104          DC    A(SBFPFLGS)
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           105 *
0000000000000290                                                           106 LONGS    DS    0F           int-32 inputs for long BFP testing
0000000000000290  00000006                                                 107          DC    A(INTCOUNT/4)
0000000000000294  00000460                                                 108          DC    A(INTIN)
0000000000000298  00001200                                                 109          DC    A(LBFPOUT)
000000000000029C  00001300                                                 110          DC    A(LBFPFLGS)
                                                                           111 *
00000000000002A0                                                           112 EXTDS    DS    0F           int-32 inputs for Extended BFP testing
00000000000002A0  00000006                                                 113          DC    A(INTCOUNT/4)
00000000000002A4  00000460                                                 114          DC    A(INTIN)
00000000000002A8  00001400                                                 115          DC    A(XBFPOUT)
00000000000002AC  00001600                                                 116          DC    A(XBFPFLGS)
                                                                           117 *
00000000000002B0  00000002                                                 118 RMSHORTS DC    A(INTRMCT/4)
00000000000002B4  00000470                                                 119          DC    A(INTINRM)   Last two int-32 are only concerns
00000000000002B8  00001100                                                 120          DC    A(SBFPRMO)   Space for rounding mode tests
00000000000002BC  00001180                                                 121          DC    A(SBFPRMOF)  Space for rounding mode test flags
                                                                           122 *
                                                                           123 * Convert integers to short BFP format.  A pair of results is generated
                                                                           124 * for each input: one with all exceptions non-trappable, and the second
                                                                           125 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           126 *
00000000000002C0  9823 A000                             0000000000000000   127 CEFBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000002C4  9878 A008                             0000000000000008   128          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000002C8  1222                                                     129          LTR   R2,R2         Any test cases?
00000000000002CA  078D                                                     130          BZR   R13           ..No, return to caller
00000000000002CC  0DC0                                                     131          BASR  R12,0         Set top of loop
                                                                           132 *
00000000000002CE  5810 3000                             0000000000000000   133          L     R1,0(0,R3)    Get integer test value
00000000000002D2  B29D 0254                             0000000000000254   134          LFPC  FPCREGNT      Set all exceptions non-trappable
00000000000002D6  B394 0001                                                135          CEFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002DA  7000 7000                             0000000000000000   136          STE   R0,0(0,R7)    Store short BFP result
00000000000002DE  B29C 8000                             0000000000000000   137          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           138 *
00000000000002E2  B29D 0258                             0000000000000258   139          LFPC  FPCREGTR      Set all exceptions trappable
00000000000002E6  B394 0001                                                140          CEFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002EA  7000 7004                             0000000000000004   141          STE   R0,4(0,R7)    Store short BFP result
00000000000002EE  B29C 8004                             0000000000000004   142          STFPC 4(R8)         Store resulting FPC flags and DXC
00000000000002F2  4130 3004                             0000000000000004   143          LA    R3,4(0,R3)    point to next input values
00000000000002F6  4170 7008                             0000000000000008   144          LA    R7,8(0,R7)    Point to next short BFP converted values
00000000000002FA  4180 8008                             0000000000000008   145          LA    R8,8(0,R8)    Point to next FPCR/CC result area
00000000000002FE  062C                                                     146          BCTR  R2,R12        Convert next input value.
0000000000000300  07FD                                                     147          BR    R13           All converted; return.
                                                                           148 *
                                                                           149 * Convert integers to short BFP format using each possible rounding mode.
                                                                           150 * Ten test results are generated for each input.  A 48-byte test result
                                                                           151 * section is used to keep results sets aligned on a quad-double word.
                                                                           152 *
                                                                           153 * The first four tests use rounding modes specified in the FPC with the
                                                                           154 * IEEE Inexact exception supressed.  (Nonce error: the current build of
                                                                           155 * Hyperion does not support Set BFP Rounding Mode 3-Bit.  The FPCR test
                                                                           156 * of rounding mode 7 is skipped.
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           157 *
                                                                           158 * The next six results use instruction-specified rounding modes.
                                                                           159 *
                                                                           160 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           161 * prior tests used the default rounding mode.
                                                                           162 *
0000000000000302  9823 A000                             0000000000000000   163 CEFBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000306  9878 A008                             0000000000000008   164          LM    R7,R8,8(R10)  Get address of result area and flag area.
000000000000030A  1222                                                     165          LTR   R2,R2         Any test cases?
000000000000030C  078D                                                     166          BZR   R13           ..No, return to caller
000000000000030E  0DC0                                                     167          BASR  R12,0         Set top of loop
                                                                           168 *
0000000000000310  5810 3000                             0000000000000000   169          L     R1,0(0,R3)    Get integer test value
                                                                           170 *
                                                                           171 *  Cvt Int in GPR1 to float in FPR0
                                                                           172 *
                                                                           173 * Test cases using rounding mode specified in the FPCR
                                                                           174 *
0000000000000314  B29D 0254                             0000000000000254   175          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000318  B2B8 0001                             0000000000000001   176          SRNMB 1             SET FPC to RZ, Round towards zero.
000000000000031C  B394 0401                                                177          CEFBRA R0,0,R1,B'0100'  FPC controlled rounding, inexact masked
0000000000000320  7000 7000                             0000000000000000   178          STE   R0,0*4(0,R7)  Store short BFP result
0000000000000324  B29C 8000                             0000000000000000   179          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           180 *
0000000000000328  B29D 0254                             0000000000000254   181          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
000000000000032C  B2B8 0002                             0000000000000002   182          SRNMB 2             SET FPC to RP, Round to +infinity
0000000000000330  B394 0401                                                183          CEFBRA R0,0,R1,B'0100'  FPC controlled rounding, inexact masked
0000000000000334  7000 7004                             0000000000000004   184          STE   R0,1*4(0,R7)  Store short BFP result
0000000000000338  B29C 8004                             0000000000000004   185          STFPC 1*4(R8)       Store resulting FPC flags and DXC
                                                                           186 *
000000000000033C  B29D 0254                             0000000000000254   187          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000340  B2B8 0003                             0000000000000003   188          SRNMB 3             SET FPC to RM, Round to -infinity
0000000000000344  B394 0401                                                189          CEFBRA R0,0,R1,B'0100'  FPC controlled rounding, inexact masked
0000000000000348  7000 7008                             0000000000000008   190          STE   R0,2*4(0,R7)  Store short BFP result
000000000000034C  B29C 8008                             0000000000000008   191          STFPC 2*4(R8)       Store resulting FPC flags and DXC
                                                                           192 *
0000000000000350  B29D 0254                             0000000000000254   193          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000354  B2B8 0007                             0000000000000007   194          SRNMB 7             RPS, Round Prepare for Shorter Precision
0000000000000358  B394 0401                                                195          CEFBRA R0,0,R1,B'0100'  FPC controlled rounding, inexact masked
000000000000035C  7000 700C                             000000000000000C   196          STE   R0,3*4(0,R7)  Store short BFP result
0000000000000360  B29C 800C                             000000000000000C   197          STFPC 3*4(R8)       Store resulting FPC flags and DXC
                                                                           198 *
0000000000000364  B29D 0254                             0000000000000254   199          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000368  B394 1001                                                200          CEFBRA R0,1,R1,B'0000'  RNTA Round to nearest, ties away from zero
000000000000036C  7000 7010                             0000000000000010   201          STE   R0,4*4(0,R7)  Store short BFP result
0000000000000370  B29C 8010                             0000000000000010   202          STFPC 4*4(R8)       Store resulting FPC flags and DXC
                                                                           203 *
0000000000000374  B29D 0254                             0000000000000254   204          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000378  B394 3001                                                205          CEFBRA R0,3,R1,B'0000'  RPS Round to prepare for shorter precision
000000000000037C  7000 7014                             0000000000000014   206          STE   R0,5*4(0,R7)  Store short BFP result
0000000000000380  B29C 8014                             0000000000000014   207          STFPC 5*4(R8)       Store resulting FPC flags and DXC
                                                                           208 *
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000384  B29D 0254                             0000000000000254   209          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000388  B394 4001                                                210          CEFBRA R0,4,R1,B'0000'  RNTE Round to nearest, ties to even
000000000000038C  7000 7018                             0000000000000018   211          STE   R0,6*4(0,R7)  Store short BFP result
0000000000000390  B29C 8018                             0000000000000018   212          STFPC 6*4(R8)       Store resulting FPC flags and DXC
                                                                           213 *
0000000000000394  B29D 0254                             0000000000000254   214          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
0000000000000398  B394 5001                                                215          CEFBRA R0,5,R1,B'0000'  RZ Round toward zero
000000000000039C  7000 701C                             000000000000001C   216          STE   R0,7*4(0,R7)  Store short BFP result
00000000000003A0  B29C 801C                             000000000000001C   217          STFPC 7*4(R8)       Store resulting FPC flags and DXC
                                                                           218 *
00000000000003A4  B29D 0254                             0000000000000254   219          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
00000000000003A8  B394 6001                                                220          CEFBRA R0,6,R1,B'0000'  Round to +inf
00000000000003AC  7000 7020                             0000000000000020   221          STE   R0,8*4(0,R7)  Store short BFP result
00000000000003B0  B29C 8020                             0000000000000020   222          STFPC 8*4(R8)       Store resulting FPC flags and DXC
                                                                           223 *
00000000000003B4  B29D 0254                             0000000000000254   224          LFPC  FPCREGNT      Set all exceptions non-trappable, clear flags
00000000000003B8  B394 7001                                                225          CEFBRA R0,7,R1,B'0000'  Round to -inf
00000000000003BC  7000 7024                             0000000000000024   226          STE   R0,9*4(0,R7)  Store short BFP result
00000000000003C0  B29C 8024                             0000000000000024   227          STFPC 9*4(R8)       Store resulting FPC flags and DXC
                                                                           228 *
00000000000003C4  4130 3004                             0000000000000004   229          LA    R3,4(0,R3)    point to next input values
00000000000003C8  4170 7030                             0000000000000030   230          LA    R7,12*4(0,R7)  Point to next short BFP converted values
00000000000003CC  4180 8030                             0000000000000030   231          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
00000000000003D0  062C                                                     232          BCTR  R2,R12        Convert next input value.
00000000000003D2  07FD                                                     233          BR    R13           All converted; return.
                                                                           234 *
                                                                           235 * Convert integers to long BFP format.  A pair of results is generated
                                                                           236 * for each input: one with all exceptions non-trappable, and the second
                                                                           237 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           238 * Conversion of a 32-bit integer to long is always exact; no exceptions
                                                                           239 * are expected
                                                                           240 *
00000000000003D4  9823 A000                             0000000000000000   241 CDFBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000003D8  9878 A008                             0000000000000008   242          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000003DC  1222                                                     243          LTR   R2,R2         Any test cases?
00000000000003DE  078D                                                     244          BZR   R13           ..No, return to caller
00000000000003E0  0DC0                                                     245          BASR  R12,0         Set top of loop
                                                                           246 *
00000000000003E2  5810 3000                             0000000000000000   247          L     R1,0(0,R3)    Get integer test value
00000000000003E6  B29D 0254                             0000000000000254   248          LFPC  FPCREGNT      Set all exceptions non-trappable
00000000000003EA  B395 0001                                                249          CDFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000003EE  6000 7000                             0000000000000000   250          STD   R0,0(0,R7)    Store long BFP result
00000000000003F2  B29C 8000                             0000000000000000   251          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           252 *
00000000000003F6  B29D 0258                             0000000000000258   253          LFPC  FPCREGTR      Set all exceptions trappable
00000000000003FA  B395 0001                                                254          CDFBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000003FE  6000 7008                             0000000000000008   255          STD   R0,8(0,R7)    Store long BFP result
0000000000000402  B29C 8004                             0000000000000004   256          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000406  4130 3004                             0000000000000004   257          LA    R3,4(0,R3)    point to next input values
000000000000040A  4170 7010                             0000000000000010   258          LA    R7,16(0,R7)   Point to next long BFP converted value
000000000000040E  4180 8008                             0000000000000008   259          LA    R8,8(0,R8)    Point to next FPCR/CC result area
0000000000000412  062C                                                     260          BCTR  R2,R12        Convert next input value.
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000414  07FD                                                     261          BR    R13           All converted; return.
                                                                           262 *
                                                                           263 * Convert integers to extended BFP format.  A pair of results is
                                                                           264 * generated for each input: one with all exceptions non-trappable,
                                                                           265 * and the second with all exceptions trappable.   The FPCR is
                                                                           266 * stored for each result.  Conversion of a 32-bit integer to
                                                                           267 * extended is always exact; no exceptions are expected
                                                                           268 *
0000000000000416  9823 A000                             0000000000000000   269 CXFBR    LM    R2,R3,0(R10)  Get count and address of test input values
000000000000041A  9878 A008                             0000000000000008   270          LM    R7,R8,8(R10)  Get address of result area and flag area.
000000000000041E  1222                                                     271          LTR   R2,R2         Any test cases?
0000000000000420  078D                                                     272          BZR   R13           ..No, return to caller
0000000000000422  0DC0                                                     273          BASR  R12,0         Set top of loop
                                                                           274 *
0000000000000424  5810 3000                             0000000000000000   275          L     R1,0(0,R3)    Get integer test value
0000000000000428  B29D 0254                             0000000000000254   276          LFPC  FPCREGNT      Set all exceptions non-trappable
000000000000042C  B396 0001                                                277          CXFBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
0000000000000430  6000 7000                             0000000000000000   278          STD   R0,0(0,R7)    Store extended BFP result part 1
0000000000000434  6020 7008                             0000000000000008   279          STD   R2,8(0,R7)    Store extended BFP result part 1
0000000000000438  B29C 8000                             0000000000000000   280          STFPC 0(R8)         Store resulting FPC flags and DXC
                                                                           281 *
000000000000043C  B29D 0258                             0000000000000258   282          LFPC  FPCREGTR      Set all exceptions trappable
0000000000000440  B396 0001                                                283          CXFBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
0000000000000444  6000 7010                             0000000000000010   284          STD   R0,16(0,R7)   Store extended BFP result
0000000000000448  6020 7018                             0000000000000018   285          STD   R2,24(0,R7)   Store extended BFP result
000000000000044C  B29C 8004                             0000000000000004   286          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000450  4130 3004                             0000000000000004   287          LA    R3,4(0,R3)    point to next input values
0000000000000454  4170 7020                             0000000000000020   288          LA    R7,32(0,R7)   Point to next extended BFP converted value
0000000000000458  4180 8008                             0000000000000008   289          LA    R8,8(0,R8)    Point to next FPCR/CC result area
000000000000045C  062C                                                     290          BCTR  R2,R12        Convert next input value.
000000000000045E  07FD                                                     291          BR    R13           All converted; return.
                                                                           292 *
                                                                           293 * Short integer inputs for Convert From Fixed testing.  The same set of
                                                                           294 * inputs are used for short, long, and extended formats.  The last two
                                                                           295 * values are used for rounding mode tests for short only; conversion of
                                                                           296 * int-32 to long or extended are always exact.
                                                                           297 *
0000000000000460                                                           298 INTIN    DS    0F
0000000000000460  00000001                                                 299          DC    F'1'
0000000000000464  00000002                                                 300          DC    F'2'
0000000000000468  00000004                                                 301          DC    F'4'
000000000000046C  FFFFFFFE                                                 302          DC    F'-2'
0000000000000470  7FFFFFFF                                                 303 INTINRM  DC    F'2147483647'       should compile to X'7FFFFFFF'
0000000000000474  80000001                                                 304          DC    F'-2147483647'      should compile to X'80000001'
0000000000000478                                                           305          DS    0F                  required by asma for following EQU to work.
                                      0000000000000018  0000000000000001   306 INTCOUNT EQU   *-INTIN             Count of integers in list * 4
                                      0000000000000008  0000000000000001   307 INTRMCT  EQU   *-INTINRM           Count of integers to be used for rounding mode tests
                                                                           308 *
                                      0000000000001000  0000000000000000   309 SBFPOUT  EQU   BFPCVTFF+X'1000'    Short BFP values, 12 planned, room for 20
                                      0000000000001080  0000000000000000   310 SBFPFLGS EQU   BFPCVTFF+X'1080'    FPC flags and DXC from short BFP, room for 20
                                      0000000000001100  0000000000000000   311 SBFPRMO  EQU   BFPCVTFF+X'1100'    Space for short rounding mode tests, room for 2 sets
                                      0000000000001180  0000000000000000   312 SBFPRMOF EQU   BFPCVTFF+X'1180'    Space for short rounding mode test flags, room for 2 sets
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           313 *
                                      0000000000001200  0000000000000000   314 LBFPOUT  EQU   BFPCVTFF+X'1200'    Long BFP values, 12 planned, room for 20
                                      0000000000001300  0000000000000000   315 LBFPFLGS EQU   BFPCVTFF+X'1300'    FPC flags and DXC from long BFP, room for 20
                                                                           316 *
                                      0000000000001400  0000000000000000   317 XBFPOUT  EQU   BFPCVTFF+X'1400'    Extended BFP values, 12 planned, room for 16
                                      0000000000001600  0000000000000000   318 XBFPFLGS EQU   BFPCVTFF+X'1600'    FPC flags and DXC from long BFP, room for 20
                                                                           319
                                                                           320
0000000000000478                                                           321          END
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     8

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPCVTFF            J    000000    1144    32   50   52   53   55   57   99  309  310  311  312  314  315  317  318
CDFBR               I    0003D4       4   241   80
CEFBR               I    0002C0       4   127   75
CEFBRA              I    000302       4   163   77
CTLR0               F    000250       4    89   70   71   72
CXFBR               I    000416       4   269   83
EXTDS               F    0002A0       4   112   82
FPCREGNT            X    000254       4    90  134  175  181  187  193  199  204  209  214  219  224  248  276
FPCREGTR            X    000258       4    91  139  253  282
HARDWAIT            X    0001D0       8    56   66
IMAGE               1    000000    1144     0
INTCOUNT            U    000018       1   306  101  107  113
INTIN               F    000460       4   298  306  102  108  114
INTINRM             F    000470       4   303  307  119
INTRMCT             U    000008       1   307  118
LBFPFLGS            U    001300       0   315  110
LBFPOUT             U    001200       0   314  109
LONGS               F    000290       4   106   79
PCINTCD             H    00008E       2    51   63
PCNOTDTA            I    00020C       4    66   64
PCOLDPSW            U    000150       0    52   65
PROGCHK             H    000200       2    62   56
R0                  U    000000       1    33   70   72  135  136  140  141  177  178  183  184  189  190  195  196  200  201  205
                                               206  210  211  215  216  220  221  225  226  249  250  254  255  277  278  283  284
R1                  U    000001       1    34  133  135  140  169  177  183  189  195  200  205  210  215  220  225  247  249  254
                                               275  277  283
R10                 U    00000A       1    43   74   76   79   82  127  128  163  164  241  242  269  270
R11                 U    00000B       1    44
R12                 U    00000C       1    45  131  146  167  232  245  260  273  290
R13                 U    00000D       1    46   75   77   80   83  130  147  166  233  244  261  272  291
R14                 U    00000E       1    47
R15                 U    00000F       1    48
R2                  U    000002       1    35  127  129  146  163  165  232  241  243  260  269  271  279  285  290
R3                  U    000003       1    36  127  133  143  163  169  229  241  247  257  269  275  287
R4                  U    000004       1    37
R5                  U    000005       1    38
R6                  U    000006       1    39
R7                  U    000007       1    40  128  136  141  144  164  178  184  190  196  201  206  211  216  221  226  230  242
                                               250  255  258  270  278  279  284  285  288
R8                  U    000008       1    41  128  137  142  145  164  179  185  191  197  202  207  212  217  222  227  231  242
                                               251  256  259  270  280  286  289
R9                  U    000009       1    42
RMSHORTS            A    0002B0       4   118   76
SBFPFLGS            U    001080       0   310  104
SBFPOUT             U    001000       0   309  103
SBFPRMO             U    001100       0   311  120
SBFPRMOF            U    001180       0   312  121
SHORTS              F    000280       4   100   74
START               I    000210       4    70   54
WAITPSW             X    000240      16    88   85
XBFPFLGS            U    001600       0   318  116
XBFPOUT             U    001400       0   317  115
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page     9

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page    10

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     1144  000-477  000-477
  Region             1144  000-477  000-477
    CSECT  BFPCVTFF  1144  000-477  000-477
ASMA Ver. 0.2.0                                                                                     04 Jul 2016 22:15:22  Page    11

   STMT                              FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-cvtfrfix.asm


** NO ERRORS FOUND **

