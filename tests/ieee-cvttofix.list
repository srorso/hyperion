ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             2 ***********************************************************************
                                                                             3 *
                                                                             4 *Testcase IEEE CONVERT TO FIXED 32
                                                                             5 *  Test case capability includes ieee exceptions trappable and
                                                                             6 *  otherwise.  Test result, FPC flags, DXC, and condition code are
                                                                             7 *  saved for all tests.
                                                                             8 *
                                                                             9 ***********************************************************************


                                                                            11 ***********************************************************************
                                                                            12 *
                                                                            13 * Tests the following three conversion instructions
                                                                            14 *   CONVERT TO FIXED (short BFP to int-32, RRE)
                                                                            15 *   CONVERT TO FIXED (long BFP to int-32, RRE)
                                                                            16 *   CONVERT TO FIXED (extended BFP to int-32, RRE)
                                                                            17 *   CONVERT TO FIXED (short BFP to int-32, RRF-e)
                                                                            18 *   CONVERT TO FIXED (long BFP to int-32, RRF-e)
                                                                            19 *   CONVERT TO FIXED (extended BFP to int-32, RRF-e)
                                                                            20 *
                                                                            21 * Test data is compiled into this program.  The test script that runs
                                                                            22 * this program can provide alternative test data through Hercules R
                                                                            23 * commands.
                                                                            24 *
                                                                            25 * Test Case Order
                                                                            26 * 1) Short BFP to Int-32
                                                                            27 * 2) Short BFP to Int-32 with all rounding modes
                                                                            28 * 3) Long BFP Int-32
                                                                            29 * 3) Long BFP Int-32 with all rounding modes
                                                                            30 * 4) Extended BFP to Int-32
                                                                            31 * 4) Extended BFP to Int-32 with all rounding modes
                                                                            32 *
                                                                            33 * Provided test data is:
                                                                            34 *       1, 2, 4, -2, QNaN, SNaN, 2 147 483 648, -2 147 483 648.
                                                                            35 *   The last two values will trigger inexact exceptions when converted
                                                                            36 *   TO int-32.  Underflow cases are not included.
                                                                            37 * Provided test data for rounding tests:
                                                                            38 *      -9.5, -5.5, -2.5, -1.5, -0.5, +0.5, +1.5, +2.5, +5.5, +9.5
                                                                            39 *   This data is taken from Table 9-11 on page 9-16 of SA22-7832-10.
                                                                            40 *   While the table illustrates LOAD FP INTEGER, the same results
                                                                            41 *   should be generated when creating an int-32 or int-64 integer.
                                                                            42 *
                                                                            43 * Note that three input test data sets are provided, one each for
                                                                            44 *   short, long, and extended precision BFP.  All are converted to
                                                                            45 *   int-32.
                                                                            46 *
                                                                            47 * Also tests the following floating point support instructions
                                                                            48 *   LOAD  (Short)
                                                                            49 *   LOAD  (Long)
                                                                            50 *   LOAD FPC
                                                                            51 *   SET BFP ROUNDING MODE 2-BIT
                                                                            52 *   SET BFP ROUNDING MODE 3-BIT
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            53 *   STORE (Short)
                                                                            54 *   STORE (Long)
                                                                            55 *   STORE FPC
                                                                            56 *
                                                                            57 ***********************************************************************



                                      0000000000000000  00000000000009D7    59 BFPCVTTF START 0
                                      0000000000000000  0000000000000001    60 R0       EQU   0
                                      0000000000000001  0000000000000001    61 R1       EQU   1
                                      0000000000000002  0000000000000001    62 R2       EQU   2
                                      0000000000000003  0000000000000001    63 R3       EQU   3
                                      0000000000000004  0000000000000001    64 R4       EQU   4
                                      0000000000000005  0000000000000001    65 R5       EQU   5
                                      0000000000000006  0000000000000001    66 R6       EQU   6
                                      0000000000000007  0000000000000001    67 R7       EQU   7
                                      0000000000000008  0000000000000001    68 R8       EQU   8
                                      0000000000000009  0000000000000001    69 R9       EQU   9
                                      000000000000000A  0000000000000001    70 R10      EQU   10
                                      000000000000000B  0000000000000001    71 R11      EQU   11
                                      000000000000000C  0000000000000001    72 R12      EQU   12
                                      000000000000000D  0000000000000001    73 R13      EQU   13
                                      000000000000000E  0000000000000001    74 R14      EQU   14
                                      000000000000000F  0000000000000001    75 R15      EQU   15
0000000000000000                      0000000000000000                      76          USING *,0
0000000000000000                      0000000000000000  000000000000008E    77          ORG   BFPCVTTF+X'8E'      Program check interrution code
000000000000008E  0000                                                      78 PCINTCD  DS    H
                                      0000000000000150  0000000000000000    79 PCOLDPSW EQU   BFPCVTTF+X'150'     Program check old PSW
0000000000000090                      0000000000000090  00000000000001A0    80          ORG   BFPCVTTF+X'1A0'
00000000000001A0  00000001 80000000                                         81          DC    X'0000000180000000',AD(START)    z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    82          ORG   BFPCVTTF+X'1D0'
00000000000001D0  00000000 00000000                                         83          DC    X'0000000000000000',AD(PROGCHK)  z/Arch pgm chk
00000000000001E0                      00000000000001E0  0000000000000200    84          ORG   BFPCVTTF+X'200'
                                                                            85 *
                                                                            86 * Program check routine.  If Data Exception, continue execution at
                                                                            87 * the instruction following the program check.  Otherwise, hard wait.
                                                                            88 *
0000000000000200                                                            89 PROGCHK  DS    0H             Program check occured...
0000000000000200  9507 008F                             000000000000008F    90          CLI   PCINTCD+1,X'07'  Data Exception?
0000000000000204  4770 020C                             000000000000020C    91          BNE   PCNOTDTA       ..no, hardwait
0000000000000208  B2B2 0150                             0000000000000150    92          LPSWE PCOLDPSW       ..yes, resume program execution
000000000000020C  B2B2 0260                             0000000000000260    93 PCNOTDTA LPSWE HARDWAIT       Not data exception, enter disabled wait.
                                                                            94 *
                                                                            95 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                                            96 *
0000000000000210  B600 0270                             0000000000000270    97 START    STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000214  9604 0271                             0000000000000271    98          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000218  B700 0270                             0000000000000270    99          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                                           100 *
                                                                           101 * Short BFP Input testing
                                                                           102 *
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000021C  41A0 0280                             0000000000000280   103          LA    R10,SHORTS     Point to short BFP test inputs
0000000000000220  4DD0 02E0                             00000000000002E0   104          BAS   R13,CFEBR      Convert values to fixed from short BFP
0000000000000224  41A0 02B0                             00000000000002B0   105          LA    R10,RMSHORTS   Point to inputs for rounding mode tests
0000000000000228  4DD0 033E                             000000000000033E   106          BAS   R13,CFEBRA     Convert using all rounding mode options
                                                                           107 *
                                                                           108 * Short BFP Input testing
                                                                           109 *
000000000000022C  41A0 0290                             0000000000000290   110          LA    R10,LONGS      Point to long BFP test inputs
0000000000000230  4DD0 0488                             0000000000000488   111          BAS   R13,CFDBR      Convert values to fixed from long BFP
0000000000000234  41A0 02C0                             00000000000002C0   112          LA    R10,RMLONGS    Point to inputs for rounding mode tests
0000000000000238  4DD0 04E6                             00000000000004E6   113          BAS   R13,CFDBRA     Convert using all rounding mode options
                                                                           114 *
                                                                           115 * Short BFP Input testing
                                                                           116 *
000000000000023C  41A0 02A0                             00000000000002A0   117          LA    R10,EXTDS      Point to extended BFP test inputs
0000000000000240  4DD0 0630                             0000000000000630   118          BAS   R13,CFXBR      Convert values to fixed from extended
0000000000000244  41A0 02D0                             00000000000002D0   119          LA    R10,RMEXTDS    Point to inputs for rounding mode tests
0000000000000248  4DD0 0692                             0000000000000692   120          BAS   R13,CFXBRA     Convert using all rounding mode options
                                                                           121 *
000000000000024C  B2B2 0250                             0000000000000250   122          LPSWE WAITPSW        All done
                                                                           123 *
0000000000000250                                                           124          DS    0D             Ensure correct alignment for psw
0000000000000250  00020000 00000000                                        125 WAITPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
0000000000000260  00020000 00000000                                        126 HARDWAIT DC    X'0002000000000000',XL6'00',X'DEAD' Abnormal end
                                                                           127 *
0000000000000270  00000000                                                 128 CTLR0    DS    F
0000000000000274  00000000                                                 129 FPCREGNT DC    X'00000000'  FPCR, trap all IEEE exceptions, zero flags
0000000000000278  F8000000                                                 130 FPCREGTR DC    X'F8000000'  FPCR, trap no IEEE exceptions, zero flags
                                                                           131 *
                                                                           132 * Input values parameter list, four fullwords:
                                                                           133 *      1) Count,
                                                                           134 *      2) Address of inputs,
                                                                           135 *      3) Address to place results, and
                                                                           136 *      4) Address to place DXC/Flags/cc values.
                                                                           137 *
000000000000027C                      000000000000027C  0000000000000280   138          ORG   BFPCVTTF+X'280'
0000000000000280                                                           139 SHORTS   DS    0F           Inputs for short BFP testing
0000000000000280  00000008                                                 140          DC    A(SBFPCT/4)
0000000000000284  000007E0                                                 141          DC    A(SBFPIN)
0000000000000288  00001000                                                 142          DC    A(SINTOUT)
000000000000028C  00001080                                                 143          DC    A(SINTFLGS)
                                                                           144 *
0000000000000290                                                           145 LONGS    DS    0F           Inputs for long BFP testing
0000000000000290  00000008                                                 146          DC    A(LBFPCT/8)
0000000000000294  00000828                                                 147          DC    A(LBFPIN)
0000000000000298  00001500                                                 148          DC    A(LINTOUT)
000000000000029C  00001580                                                 149          DC    A(LINTFLGS)
                                                                           150 *
00000000000002A0                                                           151 EXTDS    DS    0F           Inputs for Extended BFP testing
00000000000002A0  00000008                                                 152          DC    A(XBFPCT/16)
00000000000002A4  000008B8                                                 153          DC    A(XBFPIN)
00000000000002A8  00001A00                                                 154          DC    A(XINTOUT)
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000002AC  00001A80                                                 155          DC    A(XINTFLGS)
                                                                           156 *
00000000000002B0                                                           157 RMSHORTS DS    0F           Inputs for long BFP rounding mode tests
00000000000002B0  0000000A                                                 158          DC    A(SBFPRMCT/4)
00000000000002B4  00000800                                                 159          DC    A(SBFPINRM)  Short BFP rounding mode test inputs
00000000000002B8  00001100                                                 160          DC    A(SINTRMO)   Space for rounding mode test results
00000000000002BC  00001300                                                 161          DC    A(SINTRMOF)  Space for rounding mode test flags
                                                                           162 *
00000000000002C0                                                           163 RMLONGS  DS    0F           Inputs for long BFP rounding mode tests
00000000000002C0  0000000A                                                 164          DC    A(LBFPRMCT/8)
00000000000002C4  00000868                                                 165          DC    A(LBFPINRM)  Long BFP rounding mode test inputs
00000000000002C8  00001600                                                 166          DC    A(LINTRMO)   Space for rounding mode tests results
00000000000002CC  00001800                                                 167          DC    A(LINTRMOF)  Space for rounding mode test flags
                                                                           168 *
00000000000002D0                                                           169 RMEXTDS  DS    0F           Inputs for ext'd BFP rounding mode tests
00000000000002D0  0000000A                                                 170          DC    A(XBFPRMCT/16)
00000000000002D4  00000938                                                 171          DC    A(XBFPINRM)  Extended BFP rounding mode test inputs
00000000000002D8  00001B00                                                 172          DC    A(XINTRMO)   Space for rounding mode results
00000000000002DC  00001D00                                                 173          DC    A(XINTRMOF)  Space for rounding mode test flags
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           175 ***********************************************************************
                                                                           176 *
                                                                           177 * Convert short BFP to integer-32 format.  A pair of results is
                                                                           178 * generated for each input: one with all exceptions non-trappable, and
                                                                           179 * the second with all exceptions trappable.   The FPCR and condition
                                                                           180 * code is stored for each result.
                                                                           181 *
                                                                           182 ***********************************************************************



00000000000002E0  9823 A000                             0000000000000000   184 CFEBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000002E4  9878 A008                             0000000000000008   185          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000002E8  1222                                                     186          LTR   R2,R2         Any test cases?
00000000000002EA  078D                                                     187          BZR   R13           ..No, return to caller
00000000000002EC  0DC0                                                     188          BASR  R12,0         Set top of loop
                                                                           189 *
00000000000002EE  7800 3000                             0000000000000000   190          LE    R0,0(0,R3)    Get short BFP test value
00000000000002F2  B29D 0274                             0000000000000274   191          LFPC  FPCREGNT      Set exceptions non-trappable
00000000000002F6  B398 0010                                                192          CFEBR R1,R0         Cvt float in FPR0 to Int in GPR1
00000000000002FA  5010 7000                             0000000000000000   193          ST    R1,0(0,R7)    Store int-32 result
00000000000002FE  B29C 8000                             0000000000000000   194          STFPC 0(R8)         Store resulting FPC flags and DXC
0000000000000302  B222 0010                                                195          IPM   R1            Get condition code and program mask
0000000000000306  8810 001C                             000000000000001C   196          SRL   R1,28         Isolate CC in low order byte
000000000000030A  4210 8003                             0000000000000003   197          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           198 *
000000000000030E  B29D 0278                             0000000000000278   199          LFPC  FPCREGTR      Set exceptions trappable
0000000000000312  1711                                                     200          XR    R1,R1         Clear any residual result in R1
0000000000000314  0410                                                     201          SPM   R1            Clear out any residual nz condition code
0000000000000316  B398 0010                                                202          CFEBR R1,R0         Cvt float in FPR0 to Int in GPR1
000000000000031A  5010 7004                             0000000000000004   203          ST    R1,4(0,R7)    Store short BFP result
000000000000031E  B29C 8004                             0000000000000004   204          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000322  B222 0010                                                205          IPM   R1            Get condition code and program mask
0000000000000326  8810 001C                             000000000000001C   206          SRL   R1,28         Isolate CC in low order byte
000000000000032A  4210 8007                             0000000000000007   207          STC   R1,7(0,R8)    Save CC as low byte of FPCR
                                                                           208 *
000000000000032E  4130 3004                             0000000000000004   209          LA    R3,4(0,R3)    point to next input value
0000000000000332  4170 7008                             0000000000000008   210          LA    R7,8(0,R7)    Point to next int-32 converted value pair
0000000000000336  4180 8008                             0000000000000008   211          LA    R8,8(0,R8)    Point to next FPCR/CC result area
000000000000033A  062C                                                     212          BCTR  R2,R12        Convert next input value.
000000000000033C  07FD                                                     213          BR    R13           All converted; return.
                                                                           214 *
                                                                           215 * Convert short BFP to int-32 using each possible rounding mode.
                                                                           216 * Ten test results are generated for each input.  A 48-byte test
                                                                           217 * result section is used to keep results sets aligned on a quad-double
                                                                           218 * word.
                                                                           219 *
                                                                           220 * The first four tests use rounding modes specified in the FPC with
                                                                           221 * the IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the
                                                                           222 * first two FPCR-controlled tests and SRNMB (3-bit) is used for the
                                                                           223 * last two to get full coverage of that instruction pair.
                                                                           224 *
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           225 * The next six results use instruction-specified rounding modes.
                                                                           226 *
                                                                           227 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           228 * prior tests used the default rounding mode.  RNTE is tested
                                                                           229 * explicitly as a rounding mode in this section.
                                                                           230 *
000000000000033E  9823 A000                             0000000000000000   231 CFEBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000342  9878 A008                             0000000000000008   232          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000000000000346  1222                                                     233          LTR   R2,R2         Any test cases?
0000000000000348  078D                                                     234          BZR   R13           ..No, return to caller
000000000000034A  0DC0                                                     235          BASR  R12,0         Set top of loop
                                                                           236 *
000000000000034C  7800 3000                             0000000000000000   237          LE    R0,0(0,R3)    Get short BFP test value
                                                                           238 *
                                                                           239 * Test cases using rounding mode specified in the FPCR
                                                                           240 *
0000000000000350  B29D 0274                             0000000000000274   241          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000354  B299 0001                             0000000000000001   242          SRNM  1             SET FPC to RZ, towards zero.
0000000000000358  B398 0410                                                243          CFEBRA R1,0,R0,B'0100'  FPC ctl'd rounding, inexact masked
000000000000035C  5010 7000                             0000000000000000   244          ST    R1,0*4(0,R7)  Store integer-32 result
0000000000000360  B29C 8000                             0000000000000000   245          STFPC 0(R8)         Store resulting FPC flags and DXC
0000000000000364  B222 0010                                                246          IPM   R1            Get condition code and program mask
0000000000000368  8810 001C                             000000000000001C   247          SRL   R1,28         Isolate CC in low order byte
000000000000036C  4210 8003                             0000000000000003   248          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           249 *
0000000000000370  B29D 0274                             0000000000000274   250          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000374  B299 0002                             0000000000000002   251          SRNM  2             SET FPC to RP, to +infinity
0000000000000378  B398 0410                                                252          CFEBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
000000000000037C  5010 7004                             0000000000000004   253          ST    R1,1*4(0,R7)  Store integer-32 result
0000000000000380  B29C 8004                             0000000000000004   254          STFPC 1*4(R8)       Store resulting FPC flags and DXC
0000000000000384  B222 0010                                                255          IPM   R1            Get condition code and program mask
0000000000000388  8810 001C                             000000000000001C   256          SRL   R1,28         Isolate CC in low order byte
000000000000038C  4210 8007                             0000000000000007   257          STC   R1,(1*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           258 *
0000000000000390  B29D 0274                             0000000000000274   259          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000394  B2B8 0003                             0000000000000003   260          SRNMB 3             SET FPC to RM, to -infinity
0000000000000398  B398 0410                                                261          CFEBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
000000000000039C  5010 7008                             0000000000000008   262          ST    R1,2*4(0,R7)  Store integer-32 result
00000000000003A0  B29C 8008                             0000000000000008   263          STFPC 2*4(R8)       Store resulting FPC flags and DXC
00000000000003A4  B222 0010                                                264          IPM   R1            Get condition code and program mask
00000000000003A8  8810 001C                             000000000000001C   265          SRL   R1,28         Isolate CC in low order byte
00000000000003AC  4210 800B                             000000000000000B   266          STC   R1,(2*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           267 *
00000000000003B0  B29D 0274                             0000000000000274   268          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003B4  B2B8 0007                             0000000000000007   269          SRNMB 7             RFS, Prepare for Shorter Precision
00000000000003B8  B398 0410                                                270          CFEBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
00000000000003BC  5010 700C                             000000000000000C   271          ST    R1,3*4(0,R7)  Store integer-32 result
00000000000003C0  B29C 800C                             000000000000000C   272          STFPC 3*4(R8)       Store resulting FPC flags and DXC
00000000000003C4  B222 0010                                                273          IPM   R1            Get condition code and program mask
00000000000003C8  8810 001C                             000000000000001C   274          SRL   R1,28         Isolate CC in low order byte
00000000000003CC  4210 800F                             000000000000000F   275          STC   R1,(3*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           276 *
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           277 * Test cases using rounding mode specified in the instruction M3 field
                                                                           278 *
00000000000003D0  B29D 0274                             0000000000000274   279          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003D4  B398 1010                                                280          CFEBRA R1,1,R0,B'0000'  RNTA, to nearest, ties away from zero
00000000000003D8  5010 7010                             0000000000000010   281          ST    R1,4*4(0,R7)  Store integer-32 result
00000000000003DC  B29C 8010                             0000000000000010   282          STFPC 4*4(R8)       Store resulting FPC flags and DXC
00000000000003E0  B222 0010                                                283          IPM   R1            Get condition code and program mask
00000000000003E4  8810 001C                             000000000000001C   284          SRL   R1,28         Isolate CC in low order byte
00000000000003E8  4210 8013                             0000000000000013   285          STC   R1,(4*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           286 *
00000000000003EC  B29D 0274                             0000000000000274   287          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003F0  B398 3010                                                288          CFEBRA R1,3,R0,B'0000'  RFS, to prepare for shorter precision
00000000000003F4  5010 7014                             0000000000000014   289          ST    R1,5*4(0,R7)  Store integer-32 result
00000000000003F8  B29C 8014                             0000000000000014   290          STFPC 5*4(R8)       Store resulting FPC flags and DXC
00000000000003FC  B222 0010                                                291          IPM   R1            Get condition code and program mask
0000000000000400  8810 001C                             000000000000001C   292          SRL   R1,28         Isolate CC in low order byte
0000000000000404  4210 8017                             0000000000000017   293          STC   R1,(5*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           294 *
0000000000000408  B29D 0274                             0000000000000274   295          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000040C  B398 4010                                                296          CFEBRA R1,4,R0,B'0000'  RNTE, to nearest, ties to even
0000000000000410  5010 7018                             0000000000000018   297          ST    R1,6*4(0,R7)  Store integer-32 result
0000000000000414  B29C 8018                             0000000000000018   298          STFPC 6*4(R8)       Store resulting FPC flags and DXC
0000000000000418  B222 0010                                                299          IPM   R1            Get condition code and program mask
000000000000041C  8810 001C                             000000000000001C   300          SRL   R1,28         Isolate CC in low order byte
0000000000000420  4210 801B                             000000000000001B   301          STC   R1,(6*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           302 *
0000000000000424  B29D 0274                             0000000000000274   303          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000428  B398 5010                                                304          CFEBRA R1,5,R0,B'0000'  RZ, toward zero
000000000000042C  5010 701C                             000000000000001C   305          ST    R1,7*4(0,R7)  Store integer-32 result
0000000000000430  B29C 801C                             000000000000001C   306          STFPC 7*4(R8)       Store resulting FPC flags and DXC
0000000000000434  B222 0010                                                307          IPM   R1            Get condition code and program mask
0000000000000438  8810 001C                             000000000000001C   308          SRL   R1,28         Isolate CC in low order byte
000000000000043C  4210 801F                             000000000000001F   309          STC   R1,(7*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           310 *
0000000000000440  B29D 0274                             0000000000000274   311          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000444  B398 6010                                                312          CFEBRA R1,6,R0,B'0000'  RP, to +inf
0000000000000448  5010 7020                             0000000000000020   313          ST    R1,8*4(0,R7)  Store integer-32 result
000000000000044C  B29C 8020                             0000000000000020   314          STFPC 8*4(R8)       Store resulting FPC flags and DXC
0000000000000450  B222 0010                                                315          IPM   R1            Get condition code and program mask
0000000000000454  8810 001C                             000000000000001C   316          SRL   R1,28         Isolate CC in low order byte
0000000000000458  4210 8023                             0000000000000023   317          STC   R1,(8*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           318 *
000000000000045C  B29D 0274                             0000000000000274   319          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000460  B398 7010                                                320          CFEBRA R1,7,R0,B'0000'  RM, to -inf
0000000000000464  5010 7024                             0000000000000024   321          ST    R1,9*4(0,R7)  Store integer-32 result
0000000000000468  B29C 8024                             0000000000000024   322          STFPC 9*4(R8)       Store resulting FPC flags and DXC
000000000000046C  B222 0010                                                323          IPM   R1            Get condition code and program mask
0000000000000470  8810 001C                             000000000000001C   324          SRL   R1,28         Isolate CC in low order byte
0000000000000474  4210 8027                             0000000000000027   325          STC   R1,(9*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           326 *
0000000000000478  4130 3004                             0000000000000004   327          LA    R3,4(0,R3)    point to next input value
000000000000047C  4170 7030                             0000000000000030   328          LA    R7,12*4(0,R7)  Point to next int-32 converted value set
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     8

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000480  4180 8030                             0000000000000030   329          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
0000000000000484  062C                                                     330          BCTR  R2,R12        Convert next input value.
0000000000000486  07FD                                                     331          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page     9

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           333 ***********************************************************************
                                                                           334 *
                                                                           335 * Convert long BFP inputs to integer-32.  A pair of results is
                                                                           336 * generated for each input: one with all exceptions non-trappable, and
                                                                           337 * the second with all exceptions trappable.   The FPCR and condition
                                                                           338 * code is stored for each result.
                                                                           339 *
                                                                           340 ***********************************************************************



0000000000000488  9823 A000                             0000000000000000   342 CFDBR    LM    R2,R3,0(R10)  Get count and address of test input values
000000000000048C  9878 A008                             0000000000000008   343          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000000000000490  1222                                                     344          LTR   R2,R2         Any test cases?
0000000000000492  078D                                                     345          BZR   R13           ..No, return to caller
0000000000000494  0DC0                                                     346          BASR  R12,0         Set top of loop
                                                                           347 *
0000000000000496  6800 3000                             0000000000000000   348          LD    R0,0(0,R3)    Get long BFP test value
000000000000049A  B29D 0274                             0000000000000274   349          LFPC  FPCREGNT      Set exceptions non-trappable
000000000000049E  B399 0010                                                350          CFDBR R1,R0         Cvt float in FPR0 to Int in GPR1
00000000000004A2  5010 7000                             0000000000000000   351          ST    R1,0(0,R7)    Store long BFP result
00000000000004A6  B29C 8000                             0000000000000000   352          STFPC 0(R8)         Store resulting FPC flags and DXC
00000000000004AA  B222 0010                                                353          IPM   R1            Get condition code and program mask
00000000000004AE  8810 001C                             000000000000001C   354          SRL   R1,28         Isolate CC in low order byte
00000000000004B2  4210 8003                             0000000000000003   355          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           356 *
00000000000004B6  B29D 0278                             0000000000000278   357          LFPC  FPCREGTR      Set exceptions trappable
00000000000004BA  1711                                                     358          XR    R1,R1         Clear any residual result in R1
00000000000004BC  0410                                                     359          SPM   R1            Clear out any residual nz condition code
00000000000004BE  B399 0010                                                360          CFDBR R1,R0         Cvt float in FPR0 to Int in GPR1
00000000000004C2  5010 7004                             0000000000000004   361          ST    R1,4(0,R7)    Store int-32 result
00000000000004C6  B29C 8004                             0000000000000004   362          STFPC 4(R8)         Store resulting FPC flags and DXC
00000000000004CA  B222 0010                                                363          IPM   R1            Get condition code and program mask
00000000000004CE  8810 001C                             000000000000001C   364          SRL   R1,28         Isolate CC in low order byte
00000000000004D2  4210 8007                             0000000000000007   365          STC   R1,7(0,R8)    Save CC as low byte of FPCR
                                                                           366 *
00000000000004D6  4130 3008                             0000000000000008   367          LA    R3,8(0,R3)    point to next input value
00000000000004DA  4170 7008                             0000000000000008   368          LA    R7,8(0,R7)    Point to next int-32 converted value pair
00000000000004DE  4180 8008                             0000000000000008   369          LA    R8,8(0,R8)    Point to next FPCR/CC result area
00000000000004E2  062C                                                     370          BCTR  R2,R12        Convert next input value.
00000000000004E4  07FD                                                     371          BR    R13           All converted; return.
                                                                           372 *
                                                                           373 * Convert long BFP to int-32 using each possible rounding mode.
                                                                           374 * Ten test results are generated for each input.  A 48-byte test result
                                                                           375 * section is used to keep results sets aligned on a quad-double word.
                                                                           376 *
                                                                           377 * The first four tests use rounding modes specified in the FPC with the
                                                                           378 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the first
                                                                           379 * two FPCR-controlled tests and SRNMB (3-bit) is used for the last two
                                                                           380 * to get full coverage of that instruction pair.
                                                                           381 *
                                                                           382 * The next six results use instruction-specified rounding modes.
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    10

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           383 *
                                                                           384 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           385 * prior tests used the default rounding mode.  RNTE is tested explicitly
                                                                           386 * as a rounding mode in this section.
                                                                           387 *
00000000000004E6  9823 A000                             0000000000000000   388 CFDBRA   LM    R2,R3,0(R10)  Get count and address of test input values
00000000000004EA  9878 A008                             0000000000000008   389          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000004EE  1222                                                     390          LTR   R2,R2         Any test cases?
00000000000004F0  078D                                                     391          BZR   R13           ..No, return to caller
00000000000004F2  0DC0                                                     392          BASR  R12,0         Set top of loop
                                                                           393 *
00000000000004F4  6800 3000                             0000000000000000   394          LD    R0,0(0,R3)    Get long BFP test value
                                                                           395 *
                                                                           396 * Test cases using rounding mode specified in the FPCR
                                                                           397 *
00000000000004F8  B29D 0274                             0000000000000274   398          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004FC  B299 0001                             0000000000000001   399          SRNM  1             SET FPC to RZ, towards zero.
0000000000000500  B399 0410                                                400          CFDBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
0000000000000504  5010 7000                             0000000000000000   401          ST    R1,0*4(0,R7)  Store integer-32 result
0000000000000508  B29C 8000                             0000000000000000   402          STFPC 0(R8)         Store resulting FPC flags and DXC
000000000000050C  B222 0010                                                403          IPM   R1            Get condition code and program mask
0000000000000510  8810 001C                             000000000000001C   404          SRL   R1,28         Isolate CC in low order byte
0000000000000514  4210 8003                             0000000000000003   405          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           406 *
0000000000000518  B29D 0274                             0000000000000274   407          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000051C  B299 0002                             0000000000000002   408          SRNM  2             SET FPC to RP, to +infinity
0000000000000520  B399 0410                                                409          CFDBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
0000000000000524  5010 7004                             0000000000000004   410          ST    R1,1*4(0,R7)  Store integer-32 result
0000000000000528  B29C 8004                             0000000000000004   411          STFPC 1*4(R8)       Store resulting FPC flags and DXC
000000000000052C  B222 0010                                                412          IPM   R1            Get condition code and program mask
0000000000000530  8810 001C                             000000000000001C   413          SRL   R1,28         Isolate CC in low order byte
0000000000000534  4210 8007                             0000000000000007   414          STC   R1,(1*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           415 *
0000000000000538  B29D 0274                             0000000000000274   416          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000053C  B2B8 0003                             0000000000000003   417          SRNMB 3             SET FPC to RM, to -infinity
0000000000000540  B399 0410                                                418          CFDBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
0000000000000544  5010 7008                             0000000000000008   419          ST    R1,2*4(0,R7)  Store integer-32 result
0000000000000548  B29C 8008                             0000000000000008   420          STFPC 2*4(R8)       Store resulting FPC flags and DXC
000000000000054C  B222 0010                                                421          IPM   R1            Get condition code and program mask
0000000000000550  8810 001C                             000000000000001C   422          SRL   R1,28         Isolate CC in low order byte
0000000000000554  4210 800B                             000000000000000B   423          STC   R1,(2*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           424 *
0000000000000558  B29D 0274                             0000000000000274   425          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000055C  B2B8 0007                             0000000000000007   426          SRNMB 7             RFS, Prepare for Shorter Precision
0000000000000560  B399 0410                                                427          CFDBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
0000000000000564  5010 700C                             000000000000000C   428          ST    R1,3*4(0,R7)  Store integer-32 result
0000000000000568  B29C 800C                             000000000000000C   429          STFPC 3*4(R8)       Store resulting FPC flags and DXC
000000000000056C  B222 0010                                                430          IPM   R1            Get condition code and program mask
0000000000000570  8810 001C                             000000000000001C   431          SRL   R1,28         Isolate CC in low order byte
0000000000000574  4210 800F                             000000000000000F   432          STC   R1,(3*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           433 *
                                                                           434 * Test cases using rounding mode specified in the instruction M3 field
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    11

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           435 *
0000000000000578  B29D 0274                             0000000000000274   436          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000057C  B399 1010                                                437          CFDBRA R1,1,R0,B'0000'  RNTA, to nearest, ties away from zero
0000000000000580  5010 7010                             0000000000000010   438          ST    R1,4*4(0,R7)  Store integer-32 result
0000000000000584  B29C 8010                             0000000000000010   439          STFPC 4*4(R8)       Store resulting FPC flags and DXC
0000000000000588  B222 0010                                                440          IPM   R1            Get condition code and program mask
000000000000058C  8810 001C                             000000000000001C   441          SRL   R1,28         Isolate CC in low order byte
0000000000000590  4210 8013                             0000000000000013   442          STC   R1,(4*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           443 *
0000000000000594  B29D 0274                             0000000000000274   444          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000598  B399 3010                                                445          CFDBRA R1,3,R0,B'0000'  RFS, to prepare for shorter precision
000000000000059C  5010 7014                             0000000000000014   446          ST    R1,5*4(0,R7)  Store integer-32 result
00000000000005A0  B29C 8014                             0000000000000014   447          STFPC 5*4(R8)       Store resulting FPC flags and DXC
00000000000005A4  B222 0010                                                448          IPM   R1            Get condition code and program mask
00000000000005A8  8810 001C                             000000000000001C   449          SRL   R1,28         Isolate CC in low order byte
00000000000005AC  4210 8017                             0000000000000017   450          STC   R1,(5*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           451 *
00000000000005B0  B29D 0274                             0000000000000274   452          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000005B4  B399 4010                                                453          CFDBRA R1,4,R0,B'0000'  RNTE, to nearest, ties to even
00000000000005B8  5010 7018                             0000000000000018   454          ST    R1,6*4(0,R7)  Store integer-32 result
00000000000005BC  B29C 8018                             0000000000000018   455          STFPC 6*4(R8)       Store resulting FPC flags and DXC
00000000000005C0  B222 0010                                                456          IPM   R1            Get condition code and program mask
00000000000005C4  8810 001C                             000000000000001C   457          SRL   R1,28         Isolate CC in low order byte
00000000000005C8  4210 801B                             000000000000001B   458          STC   R1,(6*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           459 *
00000000000005CC  B29D 0274                             0000000000000274   460          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000005D0  B399 5010                                                461          CFDBRA R1,5,R0,B'0000'  RZ, toward zero
00000000000005D4  5010 701C                             000000000000001C   462          ST    R1,7*4(0,R7)  Store integer-32 result
00000000000005D8  B29C 801C                             000000000000001C   463          STFPC 7*4(R8)       Store resulting FPC flags and DXC
00000000000005DC  B222 0010                                                464          IPM   R1            Get condition code and program mask
00000000000005E0  8810 001C                             000000000000001C   465          SRL   R1,28         Isolate CC in low order byte
00000000000005E4  4210 801F                             000000000000001F   466          STC   R1,(7*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           467 *
00000000000005E8  B29D 0274                             0000000000000274   468          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000005EC  B399 6010                                                469          CFDBRA R1,6,R0,B'0000'  RP, to +inf
00000000000005F0  5010 7020                             0000000000000020   470          ST    R1,8*4(0,R7)  Store integer-32 result
00000000000005F4  B29C 8020                             0000000000000020   471          STFPC 8*4(R8)       Store resulting FPC flags and DXC
00000000000005F8  B222 0010                                                472          IPM   R1            Get condition code and program mask
00000000000005FC  8810 001C                             000000000000001C   473          SRL   R1,28         Isolate CC in low order byte
0000000000000600  4210 8023                             0000000000000023   474          STC   R1,(8*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           475 *
0000000000000604  B29D 0274                             0000000000000274   476          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000608  B399 7010                                                477          CFDBRA R1,7,R0,B'0000'  RM, to -inf
000000000000060C  5010 7024                             0000000000000024   478          ST    R1,9*4(0,R7)  Store integer-32 result
0000000000000610  B29C 8024                             0000000000000024   479          STFPC 9*4(R8)       Store resulting FPC flags and DXC
0000000000000614  B222 0010                                                480          IPM   R1            Get condition code and program mask
0000000000000618  8810 001C                             000000000000001C   481          SRL   R1,28         Isolate CC in low order byte
000000000000061C  4210 8027                             0000000000000027   482          STC   R1,(9*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           483 *
0000000000000620  4130 3008                             0000000000000008   484          LA    R3,8(0,R3)    point to next input values
0000000000000624  4170 7030                             0000000000000030   485          LA    R7,12*4(0,R7)  Point to next int-32 converted value set
0000000000000628  4180 8030                             0000000000000030   486          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    12

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000062C  062C                                                     487          BCTR  R2,R12        Convert next input value.
000000000000062E  07FD                                                     488          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    13

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           490 ***********************************************************************
                                                                           491 *
                                                                           492 * Convert extended BFP to integer-32.  A pair of results is generated
                                                                           493 * for each input: one with all exceptions non-trappable, and the
                                                                           494 * second with all exceptions trappable.   The FPCR and condition code
                                                                           495 * are stored for each result.
                                                                           496 *
                                                                           497 ***********************************************************************



0000000000000630  9823 A000                             0000000000000000   499 CFXBR    LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000634  9878 A008                             0000000000000008   500          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000000000000638  1222                                                     501          LTR   R2,R2         Any test cases?
000000000000063A  078D                                                     502          BZR   R13           ..No, return to caller
000000000000063C  0DC0                                                     503          BASR  R12,0         Set top of loop
                                                                           504 *
000000000000063E  6800 3000                             0000000000000000   505          LD    R0,0(0,R3)    Get extended BFP test value part 1
0000000000000642  6820 3008                             0000000000000008   506          LD    R2,8(0,R3)    Get extended BFP test value part 1
0000000000000646  B29D 0274                             0000000000000274   507          LFPC  FPCREGNT      Set exceptions non-trappable
000000000000064A  B39A 0010                                                508          CFXBR R1,R0         Cvt float in FPR0-FPR2 to Int-32 in GPR1
000000000000064E  5010 7000                             0000000000000000   509          ST    R1,0(0,R7)    Store integer-32 result
0000000000000652  B29C 8000                             0000000000000000   510          STFPC 0(R8)         Store resulting FPC flags and DXC
0000000000000656  B222 0010                                                511          IPM   R1            Get condition code and program mask
000000000000065A  8810 001C                             000000000000001C   512          SRL   R1,28         Isolate CC in low order byte
000000000000065E  4210 8003                             0000000000000003   513          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           514 *
0000000000000662  B29D 0278                             0000000000000278   515          LFPC  FPCREGTR      Set exceptions trappable
0000000000000666  1711                                                     516          XR    R1,R1         Clear any residual result in R1
0000000000000668  0410                                                     517          SPM   R1            Clear out any residual nz condition code
000000000000066A  B39A 0010                                                518          CFXBR R1,R0         Cvt float in FPR0-FPR2 to Int-32 in GPR1
000000000000066E  5010 7004                             0000000000000004   519          ST    R1,4(0,R7)    Store integer-32 result
0000000000000672  B29C 8004                             0000000000000004   520          STFPC 4(R8)         Store resulting FPC flags and DXC
0000000000000676  B222 0010                                                521          IPM   R1            Get condition code and program mask
000000000000067A  8810 001C                             000000000000001C   522          SRL   R1,28         Isolate CC in low order byte
000000000000067E  4210 8007                             0000000000000007   523          STC   R1,7(0,R8)    Save CC as low byte of FPCR
                                                                           524 *
0000000000000682  4130 3010                             0000000000000010   525          LA    R3,16(0,R3)   Point to next extended BFP input value
0000000000000686  4170 7008                             0000000000000008   526          LA    R7,8(0,R7)    Point to next int-32 converted value pair
000000000000068A  4180 8008                             0000000000000008   527          LA    R8,8(0,R8)    Point to next FPCR/CC result area
000000000000068E  062C                                                     528          BCTR  R2,R12        Convert next input value.
0000000000000690  07FD                                                     529          BR    R13           All converted; return.
                                                                           530 *
                                                                           531 * Convert extended BFP to int-32 using each possible rounding mode.
                                                                           532 * Ten test results are generated for each input.  A 48-byte test result
                                                                           533 * section is used to keep results sets aligned on a quad-double word.
                                                                           534 *
                                                                           535 * The first four tests use rounding modes specified in the FPC with the
                                                                           536 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the
                                                                           537 * first two FPCR-controlled tests and SRNMB (3-bit) is used for the
                                                                           538 * last two To get full coverage of that instruction pair.
                                                                           539 *
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    14

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           540 * The next six results use instruction-specified rounding modes.
                                                                           541 *
                                                                           542 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           543 * prior tests used the default rounding mode.  RNTE is tested
                                                                           544 * explicitly as a rounding mode in this section.
                                                                           545 *
0000000000000692  9823 A000                             0000000000000000   546 CFXBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000696  9878 A008                             0000000000000008   547          LM    R7,R8,8(R10)  Get address of result area and flag area.
000000000000069A  1222                                                     548          LTR   R2,R2         Any test cases?
000000000000069C  078D                                                     549          BZR   R13           ..No, return to caller
000000000000069E  0DC0                                                     550          BASR  R12,0         Set top of loop
                                                                           551 *
00000000000006A0  6800 3000                             0000000000000000   552          LD    R0,0(0,R3)    Get extended BFP test value part 1
00000000000006A4  6820 3008                             0000000000000008   553          LD    R2,8(0,R3)    Get extended BFP test value part 2
                                                                           554 *
                                                                           555 *  Cvt float in FPR0 to integer-32
                                                                           556 *
                                                                           557 * Test cases using rounding mode specified in the FPCR
                                                                           558 *
00000000000006A8  B29D 0274                             0000000000000274   559          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000006AC  B2B8 0001                             0000000000000001   560          SRNMB 1             SET FPC to RZ, towards zero.
00000000000006B0  B39A 0410                                                561          CFXBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
00000000000006B4  5010 7000                             0000000000000000   562          ST    R1,0*4(0,R7)  Store integer-32 result
00000000000006B8  B29C 8000                             0000000000000000   563          STFPC 0(R8)         Store resulting FPC flags and DXC
00000000000006BC  B222 0010                                                564          IPM   R1            Get condition code and program mask
00000000000006C0  8810 001C                             000000000000001C   565          SRL   R1,28         Isolate CC in low order byte
00000000000006C4  4210 8003                             0000000000000003   566          STC   R1,3(0,R8)    Save CC as low byte of FPCR
                                                                           567 *
00000000000006C8  B29D 0274                             0000000000000274   568          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000006CC  B2B8 0002                             0000000000000002   569          SRNMB 2             SET FPC to RP, to +infinity
00000000000006D0  B39A 0410                                                570          CFXBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
00000000000006D4  5010 7004                             0000000000000004   571          ST    R1,1*4(0,R7)  Store integer-32 result
00000000000006D8  B29C 8004                             0000000000000004   572          STFPC 1*4(R8)       Store resulting FPC flags and DXC
00000000000006DC  B222 0010                                                573          IPM   R1            Get condition code and program mask
00000000000006E0  8810 001C                             000000000000001C   574          SRL   R1,28         Isolate CC in low order byte
00000000000006E4  4210 8007                             0000000000000007   575          STC   R1,(1*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           576 *
00000000000006E8  B29D 0274                             0000000000000274   577          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000006EC  B2B8 0003                             0000000000000003   578          SRNMB 3             SET FPC to RM, to -infinity
00000000000006F0  B39A 0410                                                579          CFXBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
00000000000006F4  5010 7008                             0000000000000008   580          ST    R1,2*4(0,R7)  Store integer-32 result
00000000000006F8  B29C 8008                             0000000000000008   581          STFPC 2*4(R8)       Store resulting FPC flags and DXC
00000000000006FC  B222 0010                                                582          IPM   R1            Get condition code and program mask
0000000000000700  8810 001C                             000000000000001C   583          SRL   R1,28         Isolate CC in low order byte
0000000000000704  4210 800B                             000000000000000B   584          STC   R1,(2*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           585 *
0000000000000708  B29D 0274                             0000000000000274   586          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000070C  B2B8 0007                             0000000000000007   587          SRNMB 7             RFS, Prepare for Shorter Precision
0000000000000710  B39A 0410                                                588          CFXBRA R1,0,R0,B'0100'  FPC ctl'd rounding inexact masked
0000000000000714  5010 700C                             000000000000000C   589          ST    R1,3*4(0,R7)  Store integer-32 result
0000000000000718  B29C 800C                             000000000000000C   590          STFPC 3*4(R8)       Store resulting FPC flags and DXC
000000000000071C  B222 0010                                                591          IPM   R1            Get condition code and program mask
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    15

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000720  8810 001C                             000000000000001C   592          SRL   R1,28         Isolate CC in low order byte
0000000000000724  4210 800F                             000000000000000F   593          STC   R1,(3*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           594 *
                                                                           595 * Test cases using rounding mode specified in the instruction M3 field
                                                                           596 *
0000000000000728  B29D 0274                             0000000000000274   597          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000072C  B39A 1010                                                598          CFXBRA R1,1,R0,B'0000'  RNTA, to nearest, ties away from zero
0000000000000730  5010 7010                             0000000000000010   599          ST    R1,4*4(0,R7)  Store integer-32 result
0000000000000734  B29C 8010                             0000000000000010   600          STFPC 4*4(R8)       Store resulting FPC flags and DXC
0000000000000738  B222 0010                                                601          IPM   R1            Get condition code and program mask
000000000000073C  8810 001C                             000000000000001C   602          SRL   R1,28         Isolate CC in low order byte
0000000000000740  4210 8013                             0000000000000013   603          STC   R1,(4*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           604 *
0000000000000744  B29D 0274                             0000000000000274   605          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000748  B39A 3010                                                606          CFXBRA R1,3,R0,B'0000'  RFS, to prepare for shorter precision
000000000000074C  5010 7014                             0000000000000014   607          ST    R1,5*4(0,R7)  Store integer-32 result
0000000000000750  B29C 8014                             0000000000000014   608          STFPC 5*4(R8)       Store resulting FPC flags and DXC
0000000000000754  B222 0010                                                609          IPM   R1            Get condition code and program mask
0000000000000758  8810 001C                             000000000000001C   610          SRL   R1,28         Isolate CC in low order byte
000000000000075C  4210 8017                             0000000000000017   611          STC   R1,(5*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           612 *
0000000000000760  B29D 0274                             0000000000000274   613          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000764  B39A 4010                                                614          CFXBRA R1,4,R0,B'0000'  RNTE, to nearest, ties to even
0000000000000768  5010 7018                             0000000000000018   615          ST    R1,6*4(0,R7)  Store integer-32 result
000000000000076C  B29C 8018                             0000000000000018   616          STFPC 6*4(R8)       Store resulting FPC flags and DXC
0000000000000770  B222 0010                                                617          IPM   R1            Get condition code and program mask
0000000000000774  8810 001C                             000000000000001C   618          SRL   R1,28         Isolate CC in low order byte
0000000000000778  4210 801B                             000000000000001B   619          STC   R1,(6*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           620 *
000000000000077C  B29D 0274                             0000000000000274   621          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000780  B39A 5010                                                622          CFXBRA R1,5,R0,B'0000'  RZ, toward zero
0000000000000784  5010 701C                             000000000000001C   623          ST    R1,7*4(0,R7)  Store integer-32 result
0000000000000788  B29C 801C                             000000000000001C   624          STFPC 7*4(R8)       Store resulting FPC flags and DXC
000000000000078C  B222 0010                                                625          IPM   R1            Get condition code and program mask
0000000000000790  8810 001C                             000000000000001C   626          SRL   R1,28         Isolate CC in low order byte
0000000000000794  4210 801F                             000000000000001F   627          STC   R1,(7*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           628 *
0000000000000798  B29D 0274                             0000000000000274   629          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000079C  B39A 6010                                                630          CFXBRA R1,6,R0,B'0000'  RP, to +inf
00000000000007A0  5010 7020                             0000000000000020   631          ST    R1,8*4(0,R7)  Store integer-32 result
00000000000007A4  B29C 8020                             0000000000000020   632          STFPC 8*4(R8)       Store resulting FPC flags and DXC
00000000000007A8  B222 0010                                                633          IPM   R1            Get condition code and program mask
00000000000007AC  8810 001C                             000000000000001C   634          SRL   R1,28         Isolate CC in low order byte
00000000000007B0  4210 8023                             0000000000000023   635          STC   R1,(8*4)+3(0,R8)    Save CC as low byte of FPCR
                                                                           636 *
00000000000007B4  B29D 0274                             0000000000000274   637          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000007B8  B39A 7010                                                638          CFXBRA R1,7,R0,B'0000'  RM, to -inf
00000000000007BC  5010 7024                             0000000000000024   639          ST    R1,9*4(0,R7)  Store integer-32 result
00000000000007C0  B29C 8024                             0000000000000024   640          STFPC 9*4(R8)       Store resulting FPC flags and DXC
00000000000007C4  B222 0010                                                641          IPM   R1            Get condition code and program mask
00000000000007C8  8810 001C                             000000000000001C   642          SRL   R1,28         Isolate CC in low order byte
00000000000007CC  4210 8027                             0000000000000027   643          STC   R1,(9*4)+3(0,R8)    Save CC as low byte of FPCR
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    16

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           644 *
00000000000007D0  4130 3010                             0000000000000010   645          LA    R3,16(0,R3)    point to next input value
00000000000007D4  4170 7030                             0000000000000030   646          LA    R7,12*4(0,R7)  Point to next int-32 converted value set
00000000000007D8  4180 8030                             0000000000000030   647          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
00000000000007DC  062C                                                     648          BCTR  R2,R12        Convert next input value.
00000000000007DE  07FD                                                     649          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    17

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           651 ***********************************************************************
                                                                           652 *
                                                                           653 * Short integer inputs for Convert From Fixed testing.  The same test
                                                                           654 * values in the appropriate input format are used for short, long,
                                                                           655 * and extended format tests.  The last four values should generate
                                                                           656 * exceptions.
                                                                           657 *
                                                                           658 ***********************************************************************



00000000000007E0                                                           660 SBFPIN   DS    0F                Inputs for short BFP testing
00000000000007E0  3F800000                                                 661          DC    X'3F800000'  +1.0
00000000000007E4  40000000                                                 662          DC    X'40000000'  +2.0
00000000000007E8  40800000                                                 663          DC    X'40800000'  +4.0
00000000000007EC  C0000000                                                 664          DC    X'C0000000'  -2.0
00000000000007F0  7F810000                                                 665          DC    X'7F810000'  SNaN
00000000000007F4  7FC10000                                                 666          DC    X'7FC10000'  QNaN
00000000000007F8  4F000001                                                 667          DC    X'4F000001'  +max int-32 + 1.  (2147483647 + 1)
00000000000007FC  CF000002                                                 668          DC    X'CF000002'  -max int-32 - 2.  (-2147483647 - 2)
0000000000000800                                                           669          DS    0F           required by asma for following EQU to work.
                                      0000000000000020  0000000000000001   670 SBFPCT   EQU   *-SBFPIN         Count of short BFP in list * 4
                                                                           671 *
0000000000000800                                                           672 SBFPINRM DS    0F
0000000000000800  C1180000                                                 673          DC    X'C1180000'         -9.5
0000000000000804  C0B00000                                                 674          DC    X'C0B00000'         -5.5
0000000000000808  C0200000                                                 675          DC    X'C0200000'         -2.5
000000000000080C  BFC00000                                                 676          DC    X'BFC00000'         -1.5
0000000000000810  BF000000                                                 677          DC    X'BF000000'         -0.5
0000000000000814  3F000000                                                 678          DC    X'3F000000'         +0.5
0000000000000818  3FC00000                                                 679          DC    X'3FC00000'         +1.5
000000000000081C  40200000                                                 680          DC    X'40200000'         +2.5
0000000000000820  40B00000                                                 681          DC    X'40B00000'         +5.5
0000000000000824  41180000                                                 682          DC    X'41180000'         +9.5
0000000000000828                                                           683          DS    0F           Required by asma for following EQU to work.
                                      0000000000000028  0000000000000001   684 SBFPRMCT EQU   *-SBFPINRM   Count of short BFP in list * 4
                                                                           685 *
0000000000000828                                                           686 LBFPIN   DS    0F                Inputs for long BFP testing
0000000000000828  3FF00000 00000000                                        687          DC    X'3FF0000000000000'    +1.0
0000000000000830  40000000 00000000                                        688          DC    X'4000000000000000'    +2.0
0000000000000838  40100000 00000000                                        689          DC    X'4010000000000000'    +4.0
0000000000000840  C0000000 00000000                                        690          DC    X'C000000000000000'    -2.0
0000000000000848  7FF01000 00000000                                        691          DC    X'7FF0100000000000'    SNaN
0000000000000850  7FF81000 00000000                                        692          DC    X'7FF8100000000000'    QNaN
0000000000000858  41E00000 00000000                                        693          DC    X'41E0000000000000'   +max int-32 + 1 (+2147483647 + 1)
0000000000000860  C1E00000 00200000                                        694          DC    X'C1E0000000200000'   -max int-32 - 2 (-2147483647 - 2)
0000000000000868                                                           695          DS    0F           Required by asma for following EQU to work.
                                      0000000000000040  0000000000000001   696 LBFPCT   EQU   *-LBFPIN     Count of long BFP in list * 8
                                                                           697 *
0000000000000868                                                           698 LBFPINRM DS    0F
0000000000000868  C0230000 00000000                                        699          DC    X'C023000000000000'         -9.5
0000000000000870  C0160000 00000000                                        700          DC    X'C016000000000000'         -5.5
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    18

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000878  C0040000 00000000                                        701          DC    X'C004000000000000'         -2.5
0000000000000880  BFF80000 00000000                                        702          DC    X'BFF8000000000000'         -1.5
0000000000000888  BFE00000 00000000                                        703          DC    X'BFE0000000000000'         -0.5
0000000000000890  3FE00000 00000000                                        704          DC    X'3FE0000000000000'         +0.5
0000000000000898  3FF80000 00000000                                        705          DC    X'3FF8000000000000'         +1.5
00000000000008A0  40040000 00000000                                        706          DC    X'4004000000000000'         +2.5
00000000000008A8  40160000 00000000                                        707          DC    X'4016000000000000'         +5.5
00000000000008B0  40230000 00000000                                        708          DC    X'4023000000000000'         +9.5
00000000000008B8                                                           709          DS    0F           Required by asma for following EQU to work.
                                      0000000000000050  0000000000000001   710 LBFPRMCT EQU   *-LBFPINRM   Count of long BFP in list * 8
                                                                           711 *
00000000000008B8                                                           712 XBFPIN   DS    0D                Inputs for long BFP testing
00000000000008B8  3FFF0000 00000000                                        713          DC    X'3FFF0000000000000000000000000000'    +1.0
00000000000008C8  40000000 00000000                                        714          DC    X'40000000000000000000000000000000'    +2.0
00000000000008D8  40010000 00000000                                        715          DC    X'40010000000000000000000000000000'    +4.0
00000000000008E8  C0000000 00000000                                        716          DC    X'C0000000000000000000000000000000'    -2.0
00000000000008F8  7FFF0100 00000000                                        717          DC    X'7FFF0100000000000000000000000000'    SNaN
0000000000000908  7FFF8100 00000000                                        718          DC    X'7FFF8100000000000000000000000000'    QNaN
0000000000000918  401E0000 00000000                                        719          DC    X'401E0000000000000000000000000000'   +max int-32 + 1
0000000000000928  C01E0000 00020000                                        720          DC    X'C01E0000000200000000000000000000'   -max int-32 - 2
0000000000000938                                                           721          DS    0D           Required by asma for following EQU to work.
                                      0000000000000080  0000000000000001   722 XBFPCT   EQU   *-XBFPIN     Count of extended BFP in list * 16
                                                                           723 *
0000000000000938                                                           724 XBFPINRM DS    0D
0000000000000938  C0023000 00000000                                        725          DC    X'C0023000000000000000000000000000'         -9.5
0000000000000948  C0016000 00000000                                        726          DC    X'C0016000000000000000000000000000'         -5.5
0000000000000958  C0004000 00000000                                        727          DC    X'C0004000000000000000000000000000'         -2.5
0000000000000968  BFFF8000 00000000                                        728          DC    X'BFFF8000000000000000000000000000'         -1.5
0000000000000978  BFFE0000 00000000                                        729          DC    X'BFFE0000000000000000000000000000'         -0.5
0000000000000988  3FFE0000 00000000                                        730          DC    X'3FFE0000000000000000000000000000'         +0.5
0000000000000998  3FFF8000 00000000                                        731          DC    X'3FFF8000000000000000000000000000'         +1.5
00000000000009A8  40004000 00000000                                        732          DC    X'40004000000000000000000000000000'         +2.5
00000000000009B8  40016000 00000000                                        733          DC    X'40016000000000000000000000000000'         +5.5
00000000000009C8  40023000 00000000                                        734          DC    X'40023000000000000000000000000000'         +9.5
00000000000009D8                                                           735          DS    0D           Required by asma for following EQU to work.
                                      00000000000000A0  0000000000000001   736 XBFPRMCT EQU   *-XBFPINRM   Count of extended BFP in list * 16
                                                                           737 *
                                                                           738 *  Locations for results
                                                                           739 *
                                      0000000000001000  0000000000000000   740 SINTOUT  EQU   BFPCVTTF+X'1000'    Integer-32 values from short BFP
                                                                           741 *                                  ..16 used, room for 32
                                      0000000000001080  0000000000000000   742 SINTFLGS EQU   BFPCVTTF+X'1080'    FPC flags and DXC from short BFP
                                                                           743 *                                  ..16 used, room for 32
                                      0000000000001100  0000000000000000   744 SINTRMO  EQU   BFPCVTTF+X'1100'    Short rounding mode test results
                                                                           745 *                                  ..10 sets used, space fully used
                                      0000000000001300  0000000000000000   746 SINTRMOF EQU   BFPCVTTF+X'1300'    Short rounding mode FPCR contents
                                                                           747 *                                  ..10 sets used, space fully used
                                                                           748 *
                                      0000000000001500  0000000000000000   749 LINTOUT  EQU   BFPCVTTF+X'1500'    Integer-32 values from long BFP
                                                                           750 *                                  ..16 used, room for 32
                                      0000000000001580  0000000000000000   751 LINTFLGS EQU   BFPCVTTF+X'1580'    FPC flags and DXC from long BFP
                                                                           752 *                                  ..16 used, room for 32
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    19

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000001600  0000000000000000   753 LINTRMO  EQU   BFPCVTTF+X'1600'    Long rounding mode test results
                                                                           754 *                                  ..10 sets used, space fully used
                                      0000000000001800  0000000000000000   755 LINTRMOF EQU   BFPCVTTF+X'1800'    Long rounding mode FPCR contents
                                                                           756 *                                  ..10 sets used, space fully used
                                                                           757 *
                                      0000000000001A00  0000000000000000   758 XINTOUT  EQU   BFPCVTTF+X'1A00'    Integer-32 values from extended BFP
                                                                           759 *                                  ..16 used, room for 32
                                      0000000000001A80  0000000000000000   760 XINTFLGS EQU   BFPCVTTF+X'1A80'    FPC flags and DXC from extended BFP
                                                                           761 *                                  ..16 used, room for 32
                                      0000000000001B00  0000000000000000   762 XINTRMO  EQU   BFPCVTTF+X'1B00'    Extended rounding mode test results
                                                                           763 *                                  ..10 sets used, space fully used
                                      0000000000001D00  0000000000000000   764 XINTRMOF EQU   BFPCVTTF+X'1D00'    Extended rounding mode FPCR contents
                                                                           765 *                                  ..10 sets used, space fully used
                                                                           766 *
00000000000009D8                                                           767          END
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    20

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPCVTTF            J    000000    2520    59   77   79   80   82   84  138  740  742  744  746  749  751  753  755  758  760  762
                                               764
CFDBR               I    000488       4   342  111
CFDBRA              I    0004E6       4   388  113
CFEBR               I    0002E0       4   184  104
CFEBRA              I    00033E       4   231  106
CFXBR               I    000630       4   499  118
CFXBRA              I    000692       4   546  120
CTLR0               F    000270       4   128   97   98   99
EXTDS               F    0002A0       4   151  117
FPCREGNT            X    000274       4   129  191  241  250  259  268  279  287  295  303  311  319  349  398  407  416  425  436
                                               444  452  460  468  476  507  559  568  577  586  597  605  613  621  629  637
FPCREGTR            X    000278       4   130  199  357  515
HARDWAIT            X    000260       8   126   93
IMAGE               1    000000    2520     0
LBFPCT              U    000040       1   696  146
LBFPIN              F    000828       4   686  696  147
LBFPINRM            F    000868       4   698  710  165
LBFPRMCT            U    000050       1   710  164
LINTFLGS            U    001580       0   751  149
LINTOUT             U    001500       0   749  148
LINTRMO             U    001600       0   753  166
LINTRMOF            U    001800       0   755  167
LONGS               F    000290       4   145  110
PCINTCD             H    00008E       2    78   90
PCNOTDTA            I    00020C       4    93   91
PCOLDPSW            U    000150       0    79   92
PROGCHK             H    000200       2    89   83
R0                  U    000000       1    60   97   99  190  192  202  237  243  252  261  270  280  288  296  304  312  320  348
                                               350  360  394  400  409  418  427  437  445  453  461  469  477  505  508  518  552
                                               561  570  579  588  598  606  614  622  630  638
R1                  U    000001       1    61  192  193  195  196  197  200  201  202  203  205  206  207  243  244  246  247  248
                                               252  253  255  256  257  261  262  264  265  266  270  271  273  274  275  280  281
                                               283  284  285  288  289  291  292  293  296  297  299  300  301  304  305  307  308
                                               309  312  313  315  316  317  320  321  323  324  325  350  351  353  354  355  358
                                               359  360  361  363  364  365  400  401  403  404  405  409  410  412  413  414  418
                                               419  421  422  423  427  428  430  431  432  437  438  440  441  442  445  446  448
                                               449  450  453  454  456  457  458  461  462  464  465  466  469  470  472  473  474
                                               477  478  480  481  482  508  509  511  512  513  516  517  518  519  521  522  523
                                               561  562  564  565  566  570  571  573  574  575  579  580  582  583  584  588  589
                                               591  592  593  598  599  601  602  603  606  607  609  610  611  614  615  617  618
                                               619  622  623  625  626  627  630  631  633  634  635  638  639  641  642  643
R10                 U    00000A       1    70  103  105  110  112  117  119  184  185  231  232  342  343  388  389  499  500  546
                                               547
R11                 U    00000B       1    71
R12                 U    00000C       1    72  188  212  235  330  346  370  392  487  503  528  550  648
R13                 U    00000D       1    73  104  106  111  113  118  120  187  213  234  331  345  371  391  488  502  529  549
                                               649
R14                 U    00000E       1    74
R15                 U    00000F       1    75
R2                  U    000002       1    62  184  186  212  231  233  330  342  344  370  388  390  487  499  501  506  528  546
                                               548  553  648
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    21

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

R3                  U    000003       1    63  184  190  209  231  237  327  342  348  367  388  394  484  499  505  506  525  546
                                               552  553  645
R4                  U    000004       1    64
R5                  U    000005       1    65
R6                  U    000006       1    66
R7                  U    000007       1    67  185  193  203  210  232  244  253  262  271  281  289  297  305  313  321  328  343
                                               351  361  368  389  401  410  419  428  438  446  454  462  470  478  485  500  509
                                               519  526  547  562  571  580  589  599  607  615  623  631  639  646
R8                  U    000008       1    68  185  194  197  204  207  211  232  245  248  254  257  263  266  272  275  282  285
                                               290  293  298  301  306  309  314  317  322  325  329  343  352  355  362  365  369
                                               389  402  405  411  414  420  423  429  432  439  442  447  450  455  458  463  466
                                               471  474  479  482  486  500  510  513  520  523  527  547  563  566  572  575  581
                                               584  590  593  600  603  608  611  616  619  624  627  632  635  640  643  647
R9                  U    000009       1    69
RMEXTDS             F    0002D0       4   169  119
RMLONGS             F    0002C0       4   163  112
RMSHORTS            F    0002B0       4   157  105
SBFPCT              U    000020       1   670  140
SBFPIN              F    0007E0       4   660  670  141
SBFPINRM            F    000800       4   672  684  159
SBFPRMCT            U    000028       1   684  158
SHORTS              F    000280       4   139  103
SINTFLGS            U    001080       0   742  143
SINTOUT             U    001000       0   740  142
SINTRMO             U    001100       0   744  160
SINTRMOF            U    001300       0   746  161
START               I    000210       4    97   81
WAITPSW             X    000250       8   125  122
XBFPCT              U    000080       1   722  152
XBFPIN              D    0008B8       8   712  722  153
XBFPINRM            D    000938       8   724  736  171
XBFPRMCT            U    0000A0       1   736  170
XINTFLGS            U    001A80       0   760  155
XINTOUT             U    001A00       0   758  154
XINTRMO             U    001B00       0   762  172
XINTRMOF            U    001D00       0   764  173
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    22

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    23

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     2520  000-9D7  000-9D7
  Region             2520  000-9D7  000-9D7
    CSECT  BFPCVTTF  2520  000-9D7  000-9D7
ASMA Ver. 0.2.0  ieee-cvttofix.asm: Test IEEE Convert To Fixed (int-32)                             09 Jul 2016 12:54:30  Page    24

   STMT                              FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-cvttofix.asm


** NO ERRORS FOUND **

