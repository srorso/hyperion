ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             2 ***********************************************************************
                                                                             3 *
                                                                             4 *Testcase IEEE CONVERT FROM FIXED 64
                                                                             5 *  Test case capability includes ieee exceptions trappable and
                                                                             6 *  otherwise.  Test result, FPCR flags, and DXC saved for all tests.
                                                                             7 *  Convert From Fixed does not set the condition code.
                                                                             8 *
                                                                             9 ***********************************************************************


                                                                            11 ***********************************************************************
                                                                            12 *
                                                                            13 * Tests the following six conversion instructions
                                                                            14 *   CONVERT FROM FIXED (64 to short BFP, RRE)
                                                                            15 *   CONVERT FROM FIXED (64 to long BFP, RRE)
                                                                            16 *   CONVERT FROM FIXED (64 to extended BFP, RRE)
                                                                            17 *   CONVERT FROM FIXED (64 to short BFP, RRF-e)
                                                                            18 *   CONVERT FROM FIXED (64 to long BFP, RRF-e)
                                                                            19 *   CONVERT FROM FIXED (64 to extended BFP, RRF-e)
                                                                            20 *
                                                                            21 * Test data is compiled into this program.  The test script that runs
                                                                            22 * this program can provide alternative test data through Hercules R
                                                                            23 * commands.
                                                                            24 *
                                                                            25 * Test Case Order
                                                                            26 * 1) Int-32 to Short BFP
                                                                            27 * 2) Int-32 to Short BFP with all rounding modes
                                                                            28 * 3) Int-32 to Long BFP
                                                                            29 * 4) Int-32 to Long BFP with all rounding modes
                                                                            30 * 5) Int-32 to Extended BFP
                                                                            31 *
                                                                            32 * Provided test data:
                                                                            33 *      1, 2, 4, -2,
                                                                            34 *      9 223 372 036 854 775 807   (0x7FFFFFFFFFFF)
                                                                            35 *      -9 223 372 036 854 775 807  (0x800000000000)
                                                                            36 *   The last two values trigger inexact exceptions when converted
                                                                            37 *   to long or short BFP and are used to exhaustively test
                                                                            38 *   operation of the various rounding modes.  Int-64 to extended
                                                                            39 *   BFP is always exact.
                                                                            40 *
                                                                            41 * Also tests the following floating point support instructions
                                                                            42 *   LOAD  (Short)
                                                                            43 *   LOAD  (Long)
                                                                            44 *   LOAD FPC
                                                                            45 *   SET BFP ROUNDING MODE 2-BIT
                                                                            46 *   SET BFP ROUNDING MODE 3-BIT
                                                                            47 *   STORE (Short)
                                                                            48 *   STORE (Long)
                                                                            49 *   STORE FPC
                                                                            50 *
                                                                            51 ***********************************************************************
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                      0000000000000000  000000000000057F    53 BFPCVTFF START 0
                                      0000000000000000  0000000000000001    54 R0       EQU   0
                                      0000000000000001  0000000000000001    55 R1       EQU   1
                                      0000000000000002  0000000000000001    56 R2       EQU   2
                                      0000000000000003  0000000000000001    57 R3       EQU   3
                                      0000000000000004  0000000000000001    58 R4       EQU   4
                                      0000000000000005  0000000000000001    59 R5       EQU   5
                                      0000000000000006  0000000000000001    60 R6       EQU   6
                                      0000000000000007  0000000000000001    61 R7       EQU   7
                                      0000000000000008  0000000000000001    62 R8       EQU   8
                                      0000000000000009  0000000000000001    63 R9       EQU   9
                                      000000000000000A  0000000000000001    64 R10      EQU   10
                                      000000000000000B  0000000000000001    65 R11      EQU   11
                                      000000000000000C  0000000000000001    66 R12      EQU   12
                                      000000000000000D  0000000000000001    67 R13      EQU   13
                                      000000000000000E  0000000000000001    68 R14      EQU   14
                                      000000000000000F  0000000000000001    69 R15      EQU   15
0000000000000000                      0000000000000000                      70          USING *,0
0000000000000000                      0000000000000000  000000000000008E    71          ORG   BFPCVTFF+X'8E'      Program check interrution code
000000000000008E  0000                                                      72 PCINTCD  DS    H
                                      0000000000000150  0000000000000000    73 PCOLDPSW EQU   BFPCVTFF+X'150'     Program check old PSW
0000000000000090                      0000000000000090  00000000000001A0    74          ORG   BFPCVTFF+X'1A0'
00000000000001A0  00000001 80000000                                         75          DC    X'0000000180000000',AD(START)     z/Arch restart PSW
00000000000001B0                      00000000000001B0  00000000000001D0    76          ORG   BFPCVTFF+X'1D0'
00000000000001D0  00000000 00000000                                         77          DC    X'0000000000000000',AD(PROGCHK)   z/Arch pgm chk
00000000000001E0                      00000000000001E0  0000000000000200    78          ORG   BFPCVTFF+X'200'
                                                                            79 *
                                                                            80 * Program check routine.  If Data Exception, continue execution at
                                                                            81 * the instruction following the program check.  Otherwise, hard wait.
                                                                            82 *
0000000000000200                                                            83 PROGCHK  DS    0H             Program check occured...
0000000000000200  9507 008F                             000000000000008F    84          CLI   PCINTCD+1,X'07'  Data Exception?
0000000000000204  4770 020C                             000000000000020C    85          BNE   PCNOTDTA       ..no, hardwait
0000000000000208  B2B2 0150                             0000000000000150    86          LPSWE PCOLDPSW       ..yes, resume program execution
000000000000020C  B2B2 0258                             0000000000000258    87 PCNOTDTA LPSWE HARDWAIT       Not data exception, enter disabled wait.
                                                                            88 *
                                                                            89 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                                            90 *
0000000000000210  B600 0268                             0000000000000268    91 START    STCTL R0,R0,CTLR0    Store CR0 to enable AFP
0000000000000214  9604 0269                             0000000000000269    92          OI    CTLR0+1,X'04'  Turn on AFP bit
0000000000000218  B700 0268                             0000000000000268    93          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                                            94 *
000000000000021C  41A0 0280                             0000000000000280    95          LA    R10,SHORTS     Point to int-64 test inputs
0000000000000220  4DD0 02D0                             00000000000002D0    96          BAS   R13,CEGBR      Convert values from fixed to short BFP
0000000000000224  41A0 02B0                             00000000000002B0    97          LA    R10,RMSHORTS   Point to int-64 inputs for rounding mode tests
0000000000000228  4DD0 0314                             0000000000000314    98          BAS   R13,CEGBRA     Convert to short BFP using rm options
                                                                            99 *
000000000000022C  41A0 0290                             0000000000000290   100          LA    R10,LONGS      Point to int-64 test inputs
0000000000000230  4DD0 03E8                             00000000000003E8   101          BAS   R13,CDGBR      Convert values from fixed to long BFP
0000000000000234  41A0 02C0                             00000000000002C0   102          LA    R10,RMLONGS    Point to int-64 inputs for rounding mode tests
0000000000000238  4DD0 042C                             000000000000042C   103          BAS   R13,CDGBRA     Convert to long BFP using rm options
                                                                           104 *
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000023C  41A0 02A0                             00000000000002A0   105          LA    R10,EXTDS      Point to int-64 test inputs
0000000000000240  4DD0 0500                             0000000000000500   106          BAS   R13,CXGBR      Convert values from fixed to extended
                                                                           107 *
0000000000000244  B2B2 0248                             0000000000000248   108          LPSWE WAITPSW        All done
                                                                           109 *
0000000000000248                                                           110          DS    0D             Ensure correct alignment for psw
0000000000000248  00020000 00000000                                        111 WAITPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
0000000000000258  00020000 00000000                                        112 HARDWAIT DC    X'0002000000000000',XL6'00',X'DEAD' Abnormal end
                                                                           113 *
0000000000000268  00000000                                                 114 CTLR0    DS    F
000000000000026C  00000000                                                 115 FPCREGNT DC    X'00000000'    FPCR Reg IEEE exceptions Not Trappable
0000000000000270  F8000000                                                 116 FPCREGTR DC    X'F8000000'    FPCR Reg IEEE exceptions TRappable
                                                                           117 *
                                                                           118 * Input values parameter list, four fullwords:
                                                                           119 *      1) Count,
                                                                           120 *      2) Address of inputs,
                                                                           121 *      3) Address to place results, and
                                                                           122 *      4) Address to place DXC/Flags/cc values.
                                                                           123 *
0000000000000274                      0000000000000274  0000000000000280   124          ORG   BFPCVTFF+X'280'
0000000000000280                                                           125 SHORTS   DS    0F           int-64 inputs for short BFP testing
0000000000000280  00000006                                                 126          DC    A(INTCOUNT/8)
0000000000000284  00000550                                                 127          DC    A(INTIN)
0000000000000288  00001000                                                 128          DC    A(SBFPOUT)
000000000000028C  00001080                                                 129          DC    A(SBFPFLGS)
                                                                           130 *
0000000000000290                                                           131 LONGS    DS    0F           int-64 inputs for long BFP testing
0000000000000290  00000006                                                 132          DC    A(INTCOUNT/8)
0000000000000294  00000550                                                 133          DC    A(INTIN)
0000000000000298  00001200                                                 134          DC    A(LBFPOUT)
000000000000029C  00001300                                                 135          DC    A(LBFPFLGS)
                                                                           136 *
00000000000002A0                                                           137 EXTDS    DS    0F           int-64 inputs for Extended BFP testing
00000000000002A0  00000006                                                 138          DC    A(INTCOUNT/8)
00000000000002A4  00000550                                                 139          DC    A(INTIN)
00000000000002A8  00001500                                                 140          DC    A(XBFPOUT)
00000000000002AC  00001700                                                 141          DC    A(XBFPFLGS)
                                                                           142 *
00000000000002B0                                                           143 RMSHORTS DS    0F           int-64 inputs for long BFP rounding mode tests
00000000000002B0  00000002                                                 144          DC    A(INTRMCT/8)
00000000000002B4  00000570                                                 145          DC    A(INTRMIN)   Last two int-64 are only concerns
00000000000002B8  00001100                                                 146          DC    A(SBFPRMO)   Space for rounding mode results
00000000000002BC  00001180                                                 147          DC    A(SBFPRMOF)  Space for rounding mode FPCR contents
                                                                           148 *
00000000000002C0                                                           149 RMLONGS  DS    0F           int-64 inputs for extended BFP rounding mode tests
00000000000002C0  00000002                                                 150          DC    A(INTRMCT/8)
00000000000002C4  00000570                                                 151          DC    A(INTRMIN)   Last two int-64 are only concerns
00000000000002C8  00001380                                                 152          DC    A(LBFPRMO)   Space for rounding mode results
00000000000002CC  00001480                                                 153          DC    A(LBFPRMOF)  Space for rounding mode FPCR contents
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           155 ***********************************************************************
                                                                           156 *
                                                                           157 * Convert int-64 to short BFP format.  A pair of results is generated
                                                                           158 * for each input: one with all exceptions non-trappable, and the second
                                                                           159 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           160 *
                                                                           161 ***********************************************************************



                                                                           163
00000000000002D0  9823 A000                             0000000000000000   164 CEGBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000002D4  1222                                                     165          LTR   R2,R2         Any test cases?
00000000000002D6  078D                                                     166          BZR   R13           ..No, return to caller
00000000000002D8  9878 A008                             0000000000000008   167          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000002DC  0DC0                                                     168          BASR  R12,0         Set top of loop
                                                                           169 *
00000000000002DE  E310 3000 0004                        0000000000000000   170          LG    R1,0(0,R3)    Get integer test value
00000000000002E4  B29D 026C                             000000000000026C   171          LFPC  FPCREGNT      Set exceptions non-trappable
00000000000002E8  B3A4 0001                                                172          CEGBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002EC  7000 7000                             0000000000000000   173          STE   R0,0(0,R7)    Store short BFP result
00000000000002F0  B29C 8000                             0000000000000000   174          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                                           175 *
00000000000002F4  B29D 0270                             0000000000000270   176          LFPC  FPCREGTR      Set exceptions trappable
00000000000002F8  B3A4 0001                                                177          CEGBR R0,R1         Cvt Int in GPR1 to float in FPR0
00000000000002FC  7000 7004                             0000000000000004   178          STE   R0,4(0,R7)    Store short BFP result
0000000000000300  B29C 8004                             0000000000000004   179          STFPC 4(R8)         Store resulting FPCR flags and DXC
0000000000000304  4130 3008                             0000000000000008   180          LA    R3,8(0,R3)    point to next input values
0000000000000308  4170 7008                             0000000000000008   181          LA    R7,8(0,R7)    Point to next short BFP converted values
000000000000030C  4180 8008                             0000000000000008   182          LA    R8,8(0,R8)    Point to next FPCR/CC result area
0000000000000310  062C                                                     183          BCTR  R2,R12        Convert next input value.
0000000000000312  07FD                                                     184          BR    R13           All converted; return.
                                                                           185 *
                                                                           186 * Convert int-64 to short BFP format using each possible rounding mode.
                                                                           187 * Ten test results are generated for each input.  A 48-byte test result
                                                                           188 * section is used to keep results sets aligned on a quad-double word.
                                                                           189 *
                                                                           190 * The first four tests use rounding modes specified in the FPCR with the
                                                                           191 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the first
                                                                           192 * two FPCR-controlled tests and SRNMB (3-bit) is used for the last two
                                                                           193 * to get full coverage of that instruction pair.
                                                                           194 *
                                                                           195 * The next six results use instruction-specified rounding modes.
                                                                           196 *
                                                                           197 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           198 * prior tests used the default rounding mode.  RNTE is tested explicitly
                                                                           199 * as a rounding mode in this section.
                                                                           200 *
0000000000000314  9823 A000                             0000000000000000   201 CEGBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000318  1222                                                     202          LTR   R2,R2         Any test cases?
000000000000031A  078D                                                     203          BZR   R13           ..No, return to caller
000000000000031C  9878 A008                             0000000000000008   204          LM    R7,R8,8(R10)  Get address of result area and flag area.
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000320  0DC0                                                     205          BASR  R12,0         Set top of loop
                                                                           206 *
0000000000000322  E310 3000 0004                        0000000000000000   207          LG    R1,0(0,R3)    Get int-64 test value
                                                                           208 *
                                                                           209 * Convert the Int-64 in GPR1 to float-64 in FPR0 using the rounding mode
                                                                           210 * specified in the FPCR.  Mask inexact exceptions.
                                                                           211 *
0000000000000328  B29D 026C                             000000000000026C   212          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000032C  B299 0001                             0000000000000001   213          SRNM  1             SET FPCR to RZ, towards zero.
0000000000000330  B3A4 0401                                                214          CEGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000334  6000 7000                             0000000000000000   215          STD   R0,0*4(0,R7)  Store short BFP result
0000000000000338  B29C 8000                             0000000000000000   216          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                                           217 *
000000000000033C  B29D 026C                             000000000000026C   218          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000340  B299 0002                             0000000000000002   219          SRNM  2             SET FPCR to RP, to +infinity
0000000000000344  B3A4 0401                                                220          CEGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000348  6000 7004                             0000000000000004   221          STD   R0,1*4(0,R7)  Store short BFP result
000000000000034C  B29C 8004                             0000000000000004   222          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
                                                                           223 *
0000000000000350  B29D 026C                             000000000000026C   224          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000354  B2B8 0003                             0000000000000003   225          SRNMB 3             SET FPCR to RM, to -infinity
0000000000000358  B3A4 0401                                                226          CEGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
000000000000035C  6000 7008                             0000000000000008   227          STD   R0,2*4(0,R7)  Store short BFP result
0000000000000360  B29C 8008                             0000000000000008   228          STFPC 2*4(R8)       Store resulting FPCR flags and DXC
                                                                           229 *
0000000000000364  B29D 026C                             000000000000026C   230          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000368  B2B8 0007                             0000000000000007   231          SRNMB 7             RPS, Prepare for Shorter Precision
000000000000036C  B3A4 0401                                                232          CEGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000370  6000 700C                             000000000000000C   233          STD   R0,3*4(0,R7)  Store short BFP result
0000000000000374  B29C 800C                             000000000000000C   234          STFPC 3*4(R8)       Store resulting FPCR flags and DXC
                                                                           235 *
                                                                           236 * Convert the Int-64 in GPR1 to float-64 in FPR0 using the rounding mode
                                                                           237 * specified in the M3 field of the instruction.
                                                                           238 *
0000000000000378  B29D 026C                             000000000000026C   239          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000037C  B3A4 1001                                                240          CEGBRA R0,1,R1,B'0000'  RNTA, to nearest, ties away from zero
0000000000000380  7000 7010                             0000000000000010   241          STE   R0,4*4(0,R7)  Store short BFP result
0000000000000384  B29C 8010                             0000000000000010   242          STFPC 4*4(R8)       Store resulting FPCR flags and DXC
                                                                           243 *
0000000000000388  B29D 026C                             000000000000026C   244          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000038C  B3A4 3001                                                245          CEGBRA R0,3,R1,B'0000'  RPS, to prepare for shorter precision
0000000000000390  7000 7014                             0000000000000014   246          STE   R0,5*4(0,R7)  Store short BFP result
0000000000000394  B29C 8014                             0000000000000014   247          STFPC 5*4(R8)       Store resulting FPCR flags and DXC
                                                                           248 *
0000000000000398  B29D 026C                             000000000000026C   249          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000039C  B3A4 4001                                                250          CEGBRA R0,4,R1,B'0000'  RNTE, to nearest, ties to even
00000000000003A0  7000 7018                             0000000000000018   251          STE   R0,6*4(0,R7)  Store short BFP result
00000000000003A4  B29C 8018                             0000000000000018   252          STFPC 6*4(R8)       Store resulting FPCR flags and DXC
                                                                           253 *
00000000000003A8  B29D 026C                             000000000000026C   254          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003AC  B3A4 5001                                                255          CEGBRA R0,5,R1,B'0000'  RZ, toward zero
00000000000003B0  7000 701C                             000000000000001C   256          STE   R0,7*4(0,R7)  Store short BFP result
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000003B4  B29C 801C                             000000000000001C   257          STFPC 7*4(R8)       Store resulting FPCR flags and DXC
                                                                           258 *
00000000000003B8  B29D 026C                             000000000000026C   259          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003BC  B3A4 6001                                                260          CEGBRA R0,6,R1,B'0000'  RP, to +inf
00000000000003C0  7000 7020                             0000000000000020   261          STE   R0,8*4(0,R7)  Store short BFP result
00000000000003C4  B29C 8020                             0000000000000020   262          STFPC 8*4(R8)       Store resulting FPCR flags and DXC
                                                                           263 *
00000000000003C8  B29D 026C                             000000000000026C   264          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000003CC  B3A4 7001                                                265          CEGBRA R0,7,R1,B'0000'  RM, to -inf
00000000000003D0  7000 7024                             0000000000000024   266          STE   R0,9*4(0,R7)  Store short BFP result
00000000000003D4  B29C 8024                             0000000000000024   267          STFPC 9*4(R8)       Store resulting FPCR flags and DXC
                                                                           268 *
00000000000003D8  4130 3008                             0000000000000008   269          LA    R3,8(0,R3)    point to next input value
00000000000003DC  4170 7030                             0000000000000030   270          LA    R7,12*4(0,R7)  Point to next short BFP rounded set
00000000000003E0  4180 8030                             0000000000000030   271          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
00000000000003E4  062C                                                     272          BCTR  R2,R12        Convert next input value.
00000000000003E6  07FD                                                     273          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           275 ***********************************************************************
                                                                           276 *
                                                                           277 * Convert int-64 to long BFP format.  A pair of results is generated
                                                                           278 * for each input: one with all exceptions non-trappable, and the second
                                                                           279 * with all exceptions trappable.   The FPCR is stored for each result.
                                                                           280 * Conversion of a 32-bit integer to long is always exact; no exceptions
                                                                           281 * are expected
                                                                           282 *
                                                                           283 ***********************************************************************



00000000000003E8  9823 A000                             0000000000000000   285 CDGBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000000000003EC  9878 A008                             0000000000000008   286          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000000000003F0  1222                                                     287          LTR   R2,R2         Any test cases?
00000000000003F2  078D                                                     288          BZR   R13           ..No, return to caller
00000000000003F4  0DC0                                                     289          BASR  R12,0         Set top of loop
                                                                           290 *
00000000000003F6  E310 3000 0004                        0000000000000000   291          LG    R1,0(0,R3)    Get integer test value
00000000000003FC  B29D 026C                             000000000000026C   292          LFPC  FPCREGNT      Set exceptions non-trappable
0000000000000400  B3A5 0001                                                293          CDGBR R0,R1         Cvt Int in GPR1 to float in FPR0
0000000000000404  6000 7000                             0000000000000000   294          STD   R0,0(0,R7)    Store long BFP result
0000000000000408  B29C 8000                             0000000000000000   295          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                                           296 *
000000000000040C  B29D 0270                             0000000000000270   297          LFPC  FPCREGTR      Set exceptions trappable
0000000000000410  B3A5 0001                                                298          CDGBR R0,R1         Cvt Int in GPR1 to float in FPR0
0000000000000414  6000 7008                             0000000000000008   299          STD   R0,8(0,R7)    Store long BFP result
0000000000000418  B29C 8004                             0000000000000004   300          STFPC 4(R8)         Store resulting FPCR flags and DXC
000000000000041C  4130 3008                             0000000000000008   301          LA    R3,8(0,R3)    point to next input value
0000000000000420  4170 7010                             0000000000000010   302          LA    R7,16(0,R7)   Point to next long BFP converted value
0000000000000424  4180 8008                             0000000000000008   303          LA    R8,8(0,R8)    Point to next FPCR/CC result area
0000000000000428  062C                                                     304          BCTR  R2,R12        Convert next input value.
000000000000042A  07FD                                                     305          BR    R13           All converted; return.
                                                                           306 *
                                                                           307 * Convert int-64 to long BFP format using each possible rounding mode.
                                                                           308 * Ten test results are generated for each input.  A 48-byte test result
                                                                           309 * section is used to keep results sets aligned on a quad-double word.
                                                                           310 *
                                                                           311 * The first four tests use rounding modes specified in the FPCR with the
                                                                           312 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the first
                                                                           313 * two FPCR-controlled tests and SRNMB (3-bit) is used for the last two
                                                                           314 * to get full coverage of that instruction pair.
                                                                           315 *
                                                                           316 * The next six results use instruction-specified rounding modes.
                                                                           317 *
                                                                           318 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                                           319 * prior tests used the default rounding mode.  RNTE is tested explicitly
                                                                           320 * as a rounding mode in this section.
                                                                           321 *
000000000000042C  9823 A000                             0000000000000000   322 CDGBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000430  9878 A008                             0000000000000008   323          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000000000000434  1222                                                     324          LTR   R2,R2         Any test cases?
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     8

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

0000000000000436  078D                                                     325          BZR   R13           ..No, return to caller
0000000000000438  0DC0                                                     326          BASR  R12,0         Set top of loop
                                                                           327 *
000000000000043A  E310 3000 0004                        0000000000000000   328          LG    R1,0(0,R3)    Get int-64 test value
                                                                           329 *
                                                                           330 * Convert the Int-64 in GPR1 to float-64 in FPR0 using the rounding mode
                                                                           331 * specified in the FPCR.  Mask inexact exceptions.
                                                                           332 *
0000000000000440  B29D 026C                             000000000000026C   333          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000444  B299 0001                             0000000000000001   334          SRNM  1             SET FPCR to RZ, towards zero.
0000000000000448  B3A5 0401                                                335          CDGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
000000000000044C  6000 7000                             0000000000000000   336          STD   R0,0*8(0,R7)  Store long BFP result
0000000000000450  B29C 8000                             0000000000000000   337          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                                           338 *
0000000000000454  B29D 026C                             000000000000026C   339          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000458  B299 0002                             0000000000000002   340          SRNM  2             SET FPCR to RP, to +infinity
000000000000045C  B3A5 0401                                                341          CDGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000460  6000 7008                             0000000000000008   342          STD   R0,1*8(0,R7)  Store long BFP result
0000000000000464  B29C 8004                             0000000000000004   343          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
                                                                           344 *
0000000000000468  B29D 026C                             000000000000026C   345          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000000000000046C  B2B8 0003                             0000000000000003   346          SRNMB 3             SET FPCR to RM, to -infinity
0000000000000470  B3A5 0401                                                347          CDGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000474  6000 7010                             0000000000000010   348          STD   R0,2*8(0,R7)  Store long BFP result
0000000000000478  B29C 8008                             0000000000000008   349          STFPC 2*4(R8)       Store resulting FPCR flags and DXC
                                                                           350 *
000000000000047C  B29D 026C                             000000000000026C   351          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000480  B2B8 0007                             0000000000000007   352          SRNMB 7             RPS, Prepare for Shorter Precision
0000000000000484  B3A5 0401                                                353          CDGBRA R0,0,R1,B'0100'  FPCR ctl'd rounding, inexact masked
0000000000000488  6000 7018                             0000000000000018   354          STD   R0,3*8(0,R7)  Store long BFP result
000000000000048C  B29C 800C                             000000000000000C   355          STFPC 3*4(R8)       Store resulting FPCR flags and DXC
                                                                           356 *
                                                                           357 * Convert the Int-64 in GPR1 to float-64 in FPR0 using the rounding mode
                                                                           358 * specified in the M3 field of the instruction.
                                                                           359 *
0000000000000490  B29D 026C                             000000000000026C   360          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000000000000494  B3A5 1001                                                361          CDGBRA R0,1,R1,B'0000'  RNTA, to nearest, ties away from zero
0000000000000498  6000 7020                             0000000000000020   362          STD   R0,4*8(0,R7)  Store long BFP result
000000000000049C  B29C 8010                             0000000000000010   363          STFPC 4*4(R8)       Store resulting FPCR flags and DXC
                                                                           364 *
00000000000004A0  B29D 026C                             000000000000026C   365          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004A4  B3A5 3001                                                366          CDGBRA R0,3,R1,B'0000'  RPS, to prepare for shorter precision
00000000000004A8  6000 7028                             0000000000000028   367          STD   R0,5*8(0,R7)  Store long BFP result
00000000000004AC  B29C 8014                             0000000000000014   368          STFPC 5*4(R8)       Store resulting FPCR flags and DXC
                                                                           369 *
00000000000004B0  B29D 026C                             000000000000026C   370          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004B4  B3A5 4001                                                371          CDGBRA R0,4,R1,B'0000'  RNTE, to nearest, ties to even
00000000000004B8  6000 7030                             0000000000000030   372          STD   R0,6*8(0,R7)  Store long BFP result
00000000000004BC  B29C 8018                             0000000000000018   373          STFPC 6*4(R8)       Store resulting FPCR flags and DXC
                                                                           374 *
00000000000004C0  B29D 026C                             000000000000026C   375          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004C4  B3A5 5001                                                376          CDGBRA R0,5,R1,B'0000'  RZ, toward zero
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page     9

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

00000000000004C8  6000 7038                             0000000000000038   377          STD   R0,7*8(0,R7)  Store long BFP result
00000000000004CC  B29C 801C                             000000000000001C   378          STFPC 7*4(R8)       Store resulting FPCR flags and DXC
                                                                           379 *
00000000000004D0  B29D 026C                             000000000000026C   380          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004D4  B3A5 6001                                                381          CDGBRA R0,6,R1,B'0000'  RP, to +inf
00000000000004D8  6000 7040                             0000000000000040   382          STD   R0,8*8(0,R7)  Store long BFP result
00000000000004DC  B29C 8020                             0000000000000020   383          STFPC 8*4(R8)       Store resulting FPCR flags and DXC
                                                                           384 *
00000000000004E0  B29D 026C                             000000000000026C   385          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000000000004E4  B3A5 7001                                                386          CDGBRA R0,7,R1,B'0000'  RM, to -inf
00000000000004E8  6000 7048                             0000000000000048   387          STD   R0,9*8(0,R7)  Store long BFP result
00000000000004EC  B29C 8024                             0000000000000024   388          STFPC 9*4(R8)       Store resulting FPCR flags and DXC
                                                                           389 *
00000000000004F0  4130 3008                             0000000000000008   390          LA    R3,8(0,R3)    point to next input value
00000000000004F4  4170 7050                             0000000000000050   391          LA    R7,10*8(0,R7)  Point to next long BFP rounded value set
00000000000004F8  4180 8030                             0000000000000030   392          LA    R8,12*4(0,R8)  Point to next FPCR/CC result area
00000000000004FC  062C                                                     393          BCTR  R2,R12        Convert next input value.
00000000000004FE  07FD                                                     394          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    10

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           396 ***********************************************************************
                                                                           397 *
                                                                           398 * Convert int-64 to extended BFP format.  A pair of results is
                                                                           399 * generated * for each input: one with all exceptions non-trappable,
                                                                           400 * and the second with all exceptions trappable.   The FPCR is stored
                                                                           401 * for each result.  Conversion of an int-64to extended is always exact;
                                                                           402 * no exceptions are expected.
                                                                           403 *
                                                                           404 ***********************************************************************



0000000000000500  9823 A000                             0000000000000000   406 CXGBR    LM    R2,R3,0(R10)  Get count and address of test input values
0000000000000504  9878 A008                             0000000000000008   407          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000000000000508  1222                                                     408          LTR   R2,R2         Any test cases?
000000000000050A  078D                                                     409          BZR   R13           ..No, return to caller
000000000000050C  0DC0                                                     410          BASR  R12,0         Set top of loop
                                                                           411 *
000000000000050E  E310 3000 0004                        0000000000000000   412          LG    R1,0(0,R3)    Get integer test value
0000000000000514  B29D 026C                             000000000000026C   413          LFPC  FPCREGNT      Set exceptions non-trappable
0000000000000518  B3A6 0001                                                414          CXGBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
000000000000051C  6000 7000                             0000000000000000   415          STD   R0,0(0,R7)    Store extended BFP result part 1
0000000000000520  6020 7008                             0000000000000008   416          STD   R2,8(0,R7)    Store extended BFP result part 2
0000000000000524  B29C 8000                             0000000000000000   417          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                                           418 *
0000000000000528  B29D 0270                             0000000000000270   419          LFPC  FPCREGTR      Set exceptions trappable
000000000000052C  B3A6 0001                                                420          CXGBR R0,R1         Cvt Int in GPR1 to float in FPR0-FPR2
0000000000000530  6000 7010                             0000000000000010   421          STD   R0,16(0,R7)   Store extended BFP result part 1
0000000000000534  6020 7018                             0000000000000018   422          STD   R2,24(0,R7)   Store extended BFP result part 2
0000000000000538  B29C 8004                             0000000000000004   423          STFPC 4(R8)         Store resulting FPCR flags and DXC
000000000000053C  4130 3008                             0000000000000008   424          LA    R3,8(0,R3)    point to next input value
0000000000000540  4170 7020                             0000000000000020   425          LA    R7,32(0,R7)   Point to next extended BFP converted value
0000000000000544  4180 8008                             0000000000000008   426          LA    R8,8(0,R8)    Point to next FPCR/CC result area
0000000000000548  062C                                                     427          BCTR  R2,R12        Convert next input value.
000000000000054A  07FD                                                     428          BR    R13           All converted; return.
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    11

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           430 ***********************************************************************
                                                                           431 *
                                                                           432 * Int-64 inputs for Convert From Fixed testing.  The same set of
                                                                           433 * inputs are used for short, long, and extended formats.  The last two
                                                                           434 * values are used for rounding mode tests for short and long only;
                                                                           435 * conversion of int-64 to extended is always exact.
                                                                           436 *
                                                                           437 ***********************************************************************



0000000000000550                                                           439 INTIN    DS    0D
0000000000000550  00000000 00000001                                        440          DC    FD'1'
0000000000000558  00000000 00000002                                        441          DC    FD'2'
0000000000000560  00000000 00000004                                        442          DC    FD'4'
0000000000000568  FFFFFFFF FFFFFFFE                                        443          DC    FD'-2'                    X'FFFFFFFF FFFFFFFE'
0000000000000570  7FFFFFFF FFFFFFFF                                        444 INTRMIN  DC    FD'9223372036854775807'   X'7FFFFFFF FFFFFFFF'
0000000000000578  80000000 00000001                                        445          DC    FD'-9223372036854775807'  X'80000000 00000001'
0000000000000580                                                           446          DS    0F         required by asma for following EQU to work.
                                      0000000000000030  0000000000000001   447 INTCOUNT EQU   *-INTIN    Count of int-64 input values * 8
                                      0000000000000010  0000000000000001   448 INTRMCT  EQU   *-INTRMIN  Count of int-64 for rounding tests * 8
                                                                           449 *
                                      0000000000001000  0000000000000000   450 SBFPOUT  EQU   BFPCVTFF+X'1000'    Int-32 results from short BFP inputs
                                                                           451 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001080  0000000000000000   452 SBFPFLGS EQU   BFPCVTFF+X'1080'    FPCR flags and DXC from short BFP
                                                                           453 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001100  0000000000000000   454 SBFPRMO  EQU   BFPCVTFF+X'1100'    Short BFP rounding mode results
                                                                           455 *                                  ..2 sets used, no room for more sets
                                      0000000000001180  0000000000000000   456 SBFPRMOF EQU   BFPCVTFF+X'1180'    Short BFP rndg mode FPCR contents
                                                                           457 *                                  ..2 sets used, no room for more sets
                                                                           458 *
                                      0000000000001200  0000000000000000   459 LBFPOUT  EQU   BFPCVTFF+X'1200'    Int-32 results from long BFP inputs
                                                                           460 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001300  0000000000000000   461 LBFPFLGS EQU   BFPCVTFF+X'1300'    Long BFP FPCR contents
                                                                           462 *                                  ..6 pairs used, room for 32 pairs
                                      0000000000001380  0000000000000000   463 LBFPRMO  EQU   BFPCVTFF+X'1380'    Long BFP rounding mode results
                                                                           464 *                                  ..2 sets used, no room for more sets
                                      0000000000001480  0000000000000000   465 LBFPRMOF EQU   BFPCVTFF+X'1480'    Long BFP rndg mode FPCR contents
                                                                           466 *                                  ..2 sets used, no room for more sets
                                                                           467 *
                                      0000000000001500  0000000000000000   468 XBFPOUT  EQU   BFPCVTFF+X'1500'    Int-32 results from extended BFP
                                                                           469 *                                  ..6 pairs used, room for 16 pairs
                                      0000000000001700  0000000000000000   470 XBFPFLGS EQU   BFPCVTFF+X'1700'    Extended BFP FPCR contents
                                                                           471 *                                  ..6 pairs used, room for 16 pairs
                                                                           472 *
                                                                           473 *
0000000000000580                                                           474          END
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    12

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

BFPCVTFF            J    000000    1408    53   71   73   74   76   78  124  450  452  454  456  459  461  463  465  468  470
CDGBR               I    0003E8       4   285  101
CDGBRA              I    00042C       4   322  103
CEGBR               I    0002D0       4   164   96
CEGBRA              I    000314       4   201   98
CTLR0               F    000268       4   114   91   92   93
CXGBR               I    000500       4   406  106
EXTDS               F    0002A0       4   137  105
FPCREGNT            X    00026C       4   115  171  212  218  224  230  239  244  249  254  259  264  292  333  339  345  351  360
                                               365  370  375  380  385  413
FPCREGTR            X    000270       4   116  176  297  419
HARDWAIT            X    000258       8   112   87
IMAGE               1    000000    1408     0
INTCOUNT            U    000030       1   447  126  132  138
INTIN               D    000550       8   439  447  127  133  139
INTRMCT             U    000010       1   448  144  150
INTRMIN             F    000570       8   444  448  145  151
LBFPFLGS            U    001300       0   461  135
LBFPOUT             U    001200       0   459  134
LBFPRMO             U    001380       0   463  152
LBFPRMOF            U    001480       0   465  153
LONGS               F    000290       4   131  100
PCINTCD             H    00008E       2    72   84
PCNOTDTA            I    00020C       4    87   85
PCOLDPSW            U    000150       0    73   86
PROGCHK             H    000200       2    83   77
R0                  U    000000       1    54   91   93  172  173  177  178  214  215  220  221  226  227  232  233  240  241  245
                                               246  250  251  255  256  260  261  265  266  293  294  298  299  335  336  341  342
                                               347  348  353  354  361  362  366  367  371  372  376  377  381  382  386  387  414
                                               415  420  421
R1                  U    000001       1    55  170  172  177  207  214  220  226  232  240  245  250  255  260  265  291  293  298
                                               328  335  341  347  353  361  366  371  376  381  386  412  414  420
R10                 U    00000A       1    64   95   97  100  102  105  164  167  201  204  285  286  322  323  406  407
R11                 U    00000B       1    65
R12                 U    00000C       1    66  168  183  205  272  289  304  326  393  410  427
R13                 U    00000D       1    67   96   98  101  103  106  166  184  203  273  288  305  325  394  409  428
R14                 U    00000E       1    68
R15                 U    00000F       1    69
R2                  U    000002       1    56  164  165  183  201  202  272  285  287  304  322  324  393  406  408  416  422  427
R3                  U    000003       1    57  164  170  180  201  207  269  285  291  301  322  328  390  406  412  424
R4                  U    000004       1    58
R5                  U    000005       1    59
R6                  U    000006       1    60
R7                  U    000007       1    61  167  173  178  181  204  215  221  227  233  241  246  251  256  261  266  270  286
                                               294  299  302  323  336  342  348  354  362  367  372  377  382  387  391  407  415
                                               416  421  422  425
R8                  U    000008       1    62  167  174  179  182  204  216  222  228  234  242  247  252  257  262  267  271  286
                                               295  300  303  323  337  343  349  355  363  368  373  378  383  388  392  407  417
                                               423  426
R9                  U    000009       1    63
RMLONGS             F    0002C0       4   149  102
RMSHORTS            F    0002B0       4   143   97
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    13

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SBFPFLGS            U    001080       0   452  129
SBFPOUT             U    001000       0   450  128
SBFPRMO             U    001100       0   454  146
SBFPRMOF            U    001180       0   456  147
SHORTS              F    000280       4   125   95
START               I    000210       4    91   75
WAITPSW             X    000248       8   111  108
XBFPFLGS            U    001700       0   470  141
XBFPOUT             U    001500       0   468  140
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    14

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    15

   DESC     SYMBOL   SIZE    POS      ADDR

Entry: 0

Image      IMAGE     1408  000-57F  000-57F
  Region             1408  000-57F  000-57F
    CSECT  BFPCVTFF  1408  000-57F  000-57F
ASMA Ver. 0.2.0  ieee-cvtfrfix64.asm: Test IEEE Convert From Fixed (int-64)                         09 Jul 2016 12:54:42  Page    16

   STMT                               FILE NAME

1     C:\Users\srorso\Documents\GitHub\hyperion\tests\ieee-cvtfrfix64.asm


** NO ERRORS FOUND **

