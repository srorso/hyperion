# ***************************************************************************
#     HERC_FLAGS.msvc      (!INCLUDE ed by "makefile-dllmod.msvc")
# --------------------------------------------------------------------------
# (c) Copyright Roger Bowler, 2005-2007
# --------------------------------------------------------------------------
#
#  Sets additional Hercules-related compiler/linker flags & #defines...
#
# ***************************************************************************

# Set some additional flags...

ldebug = $(ldebug) $(MAPFILE)

# user32.lib for the MessageBeep and MessageBox functions
LIBS = $(LIBS) user32.lib

# "C4702 unreachable code" is always a potentially very serious error
cflags = $(cflags) /we4702

# The following line makes all warnings into errors
cflags = $(cflags) /WX

!IFDEF ASSEMBLY_LISTINGS
# /FAcs = source code, assembly code, and machine code
cflags = $(cflags) /FAcs /Fa$(ASMDIR)\$(NULL)
!ENDIF

# PRERELEASE Flag support
!IFDEF PRERELEASE
rcflags = $(rcflags) -D PRERELEASE=1
!ENDIF

!IFDEF _WIN64
rcflags = $(rcflags) -D _WIN64
!ENDIF

!IFNDEF MAX_CPU_ENGINES
MAX_CPU_ENGINES = 8
!ENDIF

# Define variables that must be passed into the resource compiler and c compiler
rcflags = $(rcflags) -D _MSVC_ -D "VERSION=$(VERSION)" -D VERS_MAJ=$(VERS_MAJ) -D VERS_INT=$(VERS_INT) -D VERS_MIN=$(VERS_MIN) -D VERS_BLD=$(VERS_BLD) /D MAX_CPU_ENGINES=$(MAX_CPU_ENGINES)
cflags  = $(cflags)  /D _MSVC_ /D "VERSION=$(VERSION)" -D VERS_MAJ=$(VERS_MAJ) -D VERS_INT=$(VERS_INT) -D VERS_MIN=$(VERS_MIN) -D VERS_BLD=$(VERS_BLD) /D MAX_CPU_ENGINES=$(MAX_CPU_ENGINES)

# Add include flags so that dynamically generated headers can be kept out of source
rcflags = $(rcflags) /I$(INCDIR)
cflags  = $(cflags) /I$(INCDIR)

!IF DEFINED(CUSTOM_BUILD_STRING)
cflags  = $(cflags)  /D CUSTOM_BUILD_STRING=\"$(CUSTOM_BUILD_STRING)\"
!ENDIF

# Allow version.c to display the name of the target host CPU architecture
cflags = $(cflags) /D HOST_ARCH=$(CPU)

# The following instructs the declaration of DLL export symbols
cflags = $(cflags) /D HDL_BUILD_SHARED /D OPTION_DYNAMIC_LOAD

# Suppress some deprecation warnings that aren't really deprecation warnings
cflags = $(cflags) -D _CRT_SECURE_NO_DEPRECATE
cflags = $(cflags) -D _CRT_NONSTDC_NO_DEPRECATE

# ... or warnings that would unduly become promoted into errors due to option /WX
!IF $(vsversion) >= $(vers_vs2015)
cflags = $(cflags) /wd4996
cflags = $(cflags) /wd4312
cflags = $(cflags) /wd4477
cflags = $(cflags) /wd4172
cflags = $(cflags) /wd4776
cflags = $(cflags) /wd4091
!ENDIF

ldebug = $(ldebug) /MANIFEST

# WIN64 builds set level-4 diagnostics which are too intense for our liking,
# resulting in far too many uninteresting warning messages. Thus we override
# win32.mak's options for WIN64 to reinstate the default level-3 diagnostics
cflags = $(cflags:-W4=-W3)
cflags = $(cflags:/W4=/W3)

# Convert the following warnings into errors
# C4101 "'identifier' : unreferenced local variable"
# C4102 "'label' : unreferenced label"
cflags = $(cflags) /we4101
cflags = $(cflags) /we4102

# D9035: option 'Wp64' has been deprecated and will be removed in a future release.
cflags = $(cflags:-Wp64=)
cflags = $(cflags:/Wp64=)

# Enable "/MP (Build with Multiple Processes)" option
# if the building host has more than one processor...
!IF $(vsversion) >= $(vers_vs2008) && $(NUMBER_OF_PROCESSORS) > 1
cflags = $(cflags) /MP
!ENDIF

# Note: the "/Gm (Enable Minimal Rebuild)" option is incompatible
# with the "/MP (Build with Multiple Processes)" option (and besides
# that it's still somewhat buggy) so remove it if it's present...
cdebug  = $(cdebug:-Gm=)
cdebug  = $(cdebug:/Gm=)

# Specify module base address directly via linker option
# so we don't have to rely on user having rebase utility.
ldebug = $(ldebug) /base:0x400000

!IF "$(CPU)" == "AMD64"
!IF $(vsversion) >= $(vers_vs2015)
# Optimize for Intel CPU architecture
cflags = $(cflags) /favor:INTEL64
!ELSE
# Optimize for AMD CPU architecture
cflags = $(cflags) /favor:AMD64
!ENDIF
!ENDIF

# Increase the sockets set size limit/default to be the
# same value as used on most non-Windows platforms (1024)
cflags  = $(cflags)  /D FD_SETSIZE=1024

# Define a "Use precompiled header" compiler options string macro.
# We define it as an namke string macro to make it easier for HQA
# to remove the option if desired by setting it to an empty string.

use_pch_opt = /Fp"$(OBJDIR)\\build_pch.pch" /Yu"hstdinc.h"
